{"config":{"lang":["fr","en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Accueil","text":""},{"location":"#bienvenue-sur-le-wiki-des-archives-de-la-construction-moderne","title":"Bienvenue sur le wiki des Archives de la construction moderne","text":"<p>Ceci est un centre de partage.</p>"},{"location":"#archives-de-la-construction-moderne","title":"Archives de la construction moderne","text":"<p>Les Archives de la construction moderne (Acm) conservent et organisent des documents originaux (plans, maquettes, photos\u2026) li\u00e9s \u00e0 l'environnement construit.</p> <p>Ces ensembles, porteurs de donn\u00e9es techniques, spatiales, historiques et sociales, sont structur\u00e9s selon les principes de l'information science, avec des standards archivistiques et des mod\u00e8les de m\u00e9tadonn\u00e9es interop\u00e9rables. Cette organisation garantit leur p\u00e9rennit\u00e9 et leur accessibilit\u00e9. Ces ressources sont \u00e0 disposition de la recherche, de l'enseignement et des projets interdisciplinaires men\u00e9s par la Facult\u00e9 ENAC et l'EPFL.</p>"},{"location":"meta/advanced/","title":"Configuration avanc\u00e9e","text":""},{"location":"meta/advanced/#support-bilingue","title":"Support bilingue","text":""},{"location":"meta/advanced/#plugin","title":"Plugin","text":""},{"location":"meta/advanced/#structure-et-navigation","title":"Structure et navigation","text":""},{"location":"meta/advanced/#retablir-la-barre-de-recherche","title":"R\u00e9tablir la barre de recherche","text":""},{"location":"meta/info/","title":"\u00c0 propos du wiki","text":"<p>Ce wiki a \u00e9t\u00e9 cr\u00e9\u00e9 \u00e0 l\u2019aide de Material for MkDocs. Il est h\u00e9berg\u00e9 sur GitHub Pages.</p>"},{"location":"meta/info/#quest-ce-que-mkdocs","title":"Qu'est-ce que MkDocs ?","text":"<p>MkDocs est un g\u00e9n\u00e9rateur de sites statiques con\u00e7u pour la r\u00e9daction de documentation technique ou professionnelle. Il s\u2019appuie sur le langage Markdown, ce qui permet d\u2019\u00e9crire du contenu de mani\u00e8re simple, lisible et portable. Les sites g\u00e9n\u00e9r\u00e9s sont rapides, l\u00e9gers et faciles \u00e0 h\u00e9berger, y compris sur des services gratuits comme GitHub Pages.</p>"},{"location":"meta/info/#quest-ce-que-material-for-mkdocs","title":"Qu'est-ce que Material for MkDocs ?","text":"<p>Material for MkDocs a commenc\u00e9 comme un simple th\u00e8me pour MkDocs, mais a beaucoup \u00e9volu\u00e9 au fil des ann\u00e9es. Il int\u00e8gre nativement de nombreux plugins, des options de configuration avanc\u00e9es et de nombreuses possibilit\u00e9s de personnalisation.</p> <p>Pour en savoir plus :</p> <ul> <li>Documentation officielle de Markdown : daringfireball.net</li> <li>Documentation officielle de MkDocs : mkdocs.org</li> <li>Documentation officielle de Material for MkDocs : squidfunk.github.io/mkdocs-material</li> <li>Guide de d\u00e9marrage rapide par James Willett : Getting Started with Material for MkDocs</li> </ul>"},{"location":"meta/installation/","title":"Installation","text":"<p>Cette documentation d\u00e9crit la mani\u00e8re dont ce wiki a \u00e9t\u00e9 d\u00e9ploy\u00e9. Elle a pour objectif de documenter les \u00e9tapes techniques suivies lors de sa cr\u00e9ation, tout en fournissant un guide reproductible pour celles et ceux qui souhaiteraient construire un site similaire.</p> <p>Ce guide s\u2019appuie directement sur la documentation officielle de Material for MkDocs, dont il constitue une version condens\u00e9e, simplifi\u00e9e et adapt\u00e9e au contexte de ce projet.</p>"},{"location":"meta/installation/#prerequis","title":"Pr\u00e9requis","text":"<p>Avant de commencer l\u2019installation, assurez-vous de disposer des outils suivants :</p> <ul> <li> <p> Python, un langage de programmation simple, lisible et largement utilis\u00e9. Nous recommandons la version 3.4 ou plus r\u00e9cente pour suivre ce guide.</p> <ul> <li> pip, le gestionnaire de paquets de Python. Il permet d\u2019installer des biblioth\u00e8ques et des outils. Il est inclus par d\u00e9faut avec Python \u00e0 partir de la version 3.4.</li> </ul> </li> <li> <p> Un \u00e9diteur de code. Nous recommandons  VSCodium, une alternative open source \u00e0  Visual Studio Code.</p> </li> <li> <p> Un compte GitHub, puisque nous allons d\u00e9ployer le site via le service GitHub Pages.</p> </li> </ul> <p>Conseil</p> <p>Une fois install\u00e9, vous pouvez v\u00e9rifier que Python fonctionne en ouvrant un terminal et en tapant :</p> <pre><code>python --version\n</code></pre> <p>Pour v\u00e9rifier que <code>pip</code> fonctionne :</p> <pre><code>pip --version\n</code></pre>"},{"location":"meta/installation/#installation-initiale","title":"Installation initiale","text":"<p>Ouvrez un terminal dans le dossier o\u00f9 vous souhaitez cr\u00e9er le projet :</p> <ul> <li>Sur  Windows :  Powershell</li> <li>Sur  macOS :  Terminal</li> </ul> <p>Le terminal ex\u00e9cute les commandes dans un dossier pr\u00e9cis. Il est important de vous placer dans le dossier o\u00f9 vous souhaitez cr\u00e9er votre wiki. La commande <code>cd</code> (\u201cchange directory\u201d) permet de naviguer dans l\u2019arborescence des dossiers depuis le terminal.</p> <pre><code>cd chemin/vers/mon/dossier\n</code></pre> <p>Ex\u00e9cuter les commandes depuis l'\u00e9diteur</p> <p>Visual Studio Code et VSCodium disposent d'un terminal int\u00e9gr\u00e9, qui vous permet de continuer \u00e0 taper vos commandes directement depuis l\u2019\u00e9diteur. Allez dans le menu Terminal &gt; Nouveau terminal, ou utilisez le raccourci.</p>"},{"location":"meta/installation/#creer-un-environnement-virtuel-python","title":"Cr\u00e9er un environnement virtuel Python","text":"<p>Que signifie cette commande ?</p> <p><code>-m venv</code> utilise le module int\u00e9gr\u00e9 venv, qui sert \u00e0 cr\u00e9er des environnements virtuels. <code>venv</code> est le nom du dossier qui sera cr\u00e9\u00e9 dans votre projet (vous pouvez choisir un autre nom, mais <code>venv</code> est une convention courante).</p> <p>Dans le terminal, tapez la commande suivante :</p> <pre><code>python -m venv venv\n</code></pre>"},{"location":"meta/installation/#activer-lenvironnement-virtuel","title":"Activer l'environnement virtuel","text":"<ul> <li>Sur  Windows : <code>.\\venv\\Scripts\\activate</code></li> <li>Sur  macOS : <code>source venv/bin/activate</code></li> </ul> <p>Activation</p> <p>Si tout fonctionne correctement, vous verrez le nom de l\u2019environnement <code>(venv)</code> appara\u00eetre au d\u00e9but de votre ligne de commande.</p> <p>\u00c0 chaque fois que vous fermez le terminal, vous devrez r\u00e9activer l\u2019environnement la prochaine fois, avec la m\u00eame commande que ci-dessus.</p>"},{"location":"meta/installation/#installer-material-for-mkdocs-avec-pip","title":"Installer Material for MkDocs avec <code>pip</code>","text":"<pre><code>pip install mkdocs-material\n</code></pre> <p>Cette commande installe \u00e0 la fois MkDocs, Material for MkDocs, et toutes les d\u00e9pendances n\u00e9cessaires.</p> <p>Apr\u00e8s l\u2019installation, vous pouvez v\u00e9rifier que MkDocs est bien disponible en tapant <code>mkdocs --version</code>.</p>"},{"location":"meta/installation/#ouvrir-le-dossier-du-projet-dans-visual-studio-code-ou-vscodium","title":"Ouvrir le dossier du projet dans Visual Studio Code ou VSCodium","text":"<p>Que signifie cette commande ?</p> <p><code>code</code> appelle l\u2019application Visual Studio Code / VSCodium,  <code>.</code> signifie \u201cle dossier courant\u201d.</p> <p>Vous pouvez utiliser la commande suivante dans votre terminal (dans le bon dossier) :</p> <pre><code>code .\n</code></pre>"},{"location":"meta/installation/#initialiser-un-nouveau-site-mkdocs","title":"Initialiser un nouveau site MkDocs","text":"<p>Dans le terminal (toujours avec l\u2019environnement virtuel activ\u00e9), tapez la commande suivante :</p> <pre><code>mkdocs new .\n</code></pre> <p>La structure suivante devrait avoir \u00e9t\u00e9 cr\u00e9\u00e9e :</p> <pre><code>.\n\u251c\u2500 docs/\n\u2502  \u2514\u2500 index.md\n\u2514\u2500 mkdocs.yml\n</code></pre> <p>Cette commande cr\u00e9e deux \u00e9l\u00e9ments importants :</p> <ul> <li><code>docs/index.md</code> : la premi\u00e8re page du site (accueil). \u00c9crite en Markdown, elle peut \u00eatre modifi\u00e9e librement.</li> <li><code>mkdocs.yml</code> : un fichier de configuration r\u00e9dig\u00e9 en YAML (titre, th\u00e8me, navigation, langues, etc.).</li> </ul> <p>Pour ajouter une nouvelle page \u00e0 votre site, il suffit de cr\u00e9er un fichier <code>.md</code> dans le dossier <code>docs/</code>. Par exemple, si vous cr\u00e9ez un fichier <code>apropos.md</code>, il sera accessible \u00e0 l\u2019adresse https://mon-site/apropos/.</p> <p>Besoin d\u2019un rappel sur la syntaxe Markdown ?</p> <p>Consultez notre guide de syntaxe Markdown pour les bases.</p>"},{"location":"meta/installation/#configurer-le-site-avec-mkdocsyml","title":"Configurer le site avec <code>mkdocs.yml</code>","text":"<p>Ouvrez <code>mkdocs.yml</code> dans votre \u00e9diteur et remplacez son contenu par la configuration suivante :</p> mkdocs.yml<pre><code>site_name: Documentation de mon projet\nsite_url: https://mon-site.exemple\ntheme:\n  name: material\n</code></pre>"},{"location":"meta/installation/#previsualiser-le-site-en-local","title":"Pr\u00e9visualiser le site en local","text":"<p>Maintenant que votre site est configur\u00e9, vous pouvez le g\u00e9n\u00e9rer et le visualiser localement en temps r\u00e9el pendant que vous travaillez dessus.</p> <p>Dans le terminal (avec l\u2019environnement virtuel activ\u00e9), tapez :</p> <pre><code>mkdocs serve\n</code></pre> <p>Ouvrez un navigateur \u00e0 l'adresse : http://localhost:8000/</p> <p>Visualisez vos modifications en temps r\u00e9el</p> <p>Tant que la commande <code>mkdocs serve</code> est active dans votre terminal, le site reste visible et se met \u00e0 jour automatiquement \u00e0 chaque sauvegarde.</p> <p>Quand vous avez termin\u00e9, vous pouvez arr\u00eater le serveur en appuyant dans le terminal :</p> <ul> <li>Sur  Windows : <code>Ctrl + C</code></li> <li>Sur  macOS : <code>Cmd + C</code></li> </ul>"},{"location":"meta/installation/#validation-automatique-du-schema-yaml","title":"Validation automatique du sch\u00e9ma YAML","text":"<p>Le fichier <code>mkdocs.yml</code> est central dans la configuration de votre site. Pour \u00e9viter les erreurs de syntaxe ou de structure (qui peuvent bloquer la g\u00e9n\u00e9ration du site), il est fortement recommand\u00e9 d\u2019activer la validation automatique du sch\u00e9ma YAML dans votre \u00e9diteur de code.</p> <p>Pour Visual Studio Code et VSCodium, recherchez YAML dans le panneau des extensions et installez l'extension officielle YAML par Red Hat.</p> <p>Recherchez le fichier <code>settings.json</code> dans les param\u00e8tres ou cr\u00e9ez-en un autre \u00e0 la racine du projet.</p> <p>Ajoutez le code suivant dans ce fichier :</p> settings.json<pre><code>{\n  \"yaml.schemas\": {\n    \"https://squidfunk.github.io/mkdocs-material/schema.json\": \"mkdocs.yml\"\n  },\n  \"yaml.customTags\": [ \n    \"!ENV scalar\",\n    \"!ENV sequence\",\n    \"!relative scalar\",\n    \"tag:yaml.org,2002:python/name:material.extensions.emoji.to_svg\",\n    \"tag:yaml.org,2002:python/name:material.extensions.emoji.twemoji\",\n    \"tag:yaml.org,2002:python/name:pymdownx.superfences.fence_code_format\",\n    \"tag:yaml.org,2002:python/object/apply:pymdownx.slugs.slugify mapping\"\n  ]\n}\n</code></pre>"},{"location":"meta/publish/","title":"Publier le site","text":""},{"location":"meta/publish/#github","title":"Github","text":"<pre><code>name: ci \non:\n  push:\n    branches:\n      - master \n      - main\npermissions:\n  contents: write\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v4\n      - name: Configure Git Credentials\n        run: |\n          git config user.name github-actions[bot]\n          git config user.email 41898282+github-actions[bot]@users.noreply.github.com\n      - uses: actions/setup-python@v5\n        with:\n          python-version: 3.x\n      - run: echo \"cache_id=$(date --utc '+%V')\" &gt;&gt; $GITHUB_ENV \n      - uses: actions/cache@v4\n        with:\n          key: mkdocs-material-${{ env.cache_id }}\n          path: ~/.cache \n          restore-keys: |\n            mkdocs-material-\n      - run: pip install mkdocs-material \n      - run: mkdocs gh-deploy --force\n</code></pre>"},{"location":"meta/publish/#mettre-a-jour","title":"Mettre \u00e0 jour","text":"<p>mkdocs build</p> <p>mkdocs gh-deploy --clean</p>"},{"location":"meta/structure/","title":"Structuration du contenu","text":""},{"location":"meta/structure/#markdown","title":"Markdown","text":""},{"location":"meta/structure/#blocs","title":"Blocs","text":""},{"location":"meta/structure/#navigation","title":"Navigation","text":""},{"location":"meta/theme/","title":"Personnalisation visuelle","text":"<p>Cette section pr\u00e9sente diff\u00e9rentes fa\u00e7ons de personnaliser l\u2019apparence et le comportement de votre site MkDocs, en s\u2019appuyant sur les nombreuses fonctionnalit\u00e9s offertes par Material for MkDocs.</p>"},{"location":"meta/theme/#changer-lapparence-du-site","title":"Changer l'apparence du site","text":"<p>Material for MkDocs permet de d\u00e9finir des jeux de couleurs personnalis\u00e9s et de proposer un bouton permettant aux utilisateurs de passer du mode clair au mode sombre.</p>"},{"location":"meta/theme/#selectionner-le-theme","title":"S\u00e9lectionner le th\u00e8me","text":"<p>Material for MkDocs dispose de deux th\u00e8mes: un mode clair <code>default</code> et un mode sombre <code>slate</code>.</p> <p>Dans le fichier <code>mkdocs.yml</code>, ajoutez ou modifiez la section <code>theme:</code> comme suit :</p> <pre><code>theme:\n  name: material\n  palette:\n    scheme: slate\n</code></pre>"},{"location":"meta/theme/#definir-les-couleurs","title":"D\u00e9finir les couleurs","text":"<p>Les couleurs principales du th\u00e8me sont d\u00e9finies par <code>primary</code> et <code>accent</code>.</p> <p><code>primary</code> d\u00e9finit la couleur dominante du th\u00e8me. Elle est utilis\u00e9e notamment pour la barre de navigation sup\u00e9rieure, les liens actifs et certains boutons ou composants interactifs.</p> <pre><code>theme:\n  name: material\n  palette:\n    primary: deep purple\n</code></pre> <p><code>accent</code> d\u00e9finit la couleur secondaire. Elle est utilis\u00e9e pour attirer l\u2019attention sur certains \u00e9l\u00e9ments, comme les liens survol\u00e9s, les ic\u00f4nes s\u00e9lectionn\u00e9es et certains effets visuels (surbrillance, indicateurs de s\u00e9lection, etc.).</p> <pre><code>theme:\n  name: material\n  palette:\n    accent: pink\n</code></pre> <p>Vous pouvez choisir parmi une s\u00e9rie de couleurs pr\u00e9d\u00e9finies propos\u00e9es par le th\u00e8me, comme <code>blue</code>, <code>cyan</code>, <code>green</code>, <code>teal</code>, <code>deep orange</code>, etc. Consultez la liste compl\u00e8te ici.</p> <p>Il est \u00e9galement possible d\u2019utiliser des couleurs personnalis\u00e9es, en d\u00e9finissant votre propre palette (par code hexad\u00e9cimal ou variable CSS). Voir la documentation officielle.</p>"},{"location":"meta/theme/#activer-le-mode-clair-sombre","title":"Activer le mode clair / sombre","text":"<p>Proposer une palette de couleurs claire et sombre rend la documentation plus agr\u00e9able \u00e0 lire \u00e0 tout moment de la journ\u00e9e, en laissant \u00e0 l\u2019utilisateur le choix du mode qui lui convient le mieux.</p> <p>La configuration suivante ajoutera un bouton de bascule \u00e0 gauche de la barre de recherche pour passer d\u2019un th\u00e8me \u00e0 l\u2019autre.</p> <p>Personnalisez les modes clair / sombre</p> <p>Vous pouvez \u00e9galement d\u00e9finir des couleurs diff\u00e9rentes pour <code>primary</code> et <code>accent</code> selon la palette utilis\u00e9e (claire ou sombre).</p> <pre><code>theme:\n  name: material\n\n  palette:\n    - scheme: slate\n      toggle:\n        icon: material/weather-sunny\n        name: Passer en mode clair\n\n    - scheme: default\n      toggle:\n        icon: material/weather-night\n        name: Passer en mode sombre\n</code></pre> <p>Le bouton utilise des ic\u00f4nes Material Design, que vous pouvez personnaliser avec la propri\u00e9t\u00e9 <code>toggle:icon</code>.</p> <p>Par d\u00e9faut, on utilise :</p> <ul> <li><code>material/weather-night</code>  pour indiquer le passage en mode sombre ;</li> <li><code>material/weather-sunny</code>  pour revenir au mode clair.</li> </ul> <p>Vous pouvez remplacer ces ic\u00f4nes par n\u2019importe quelle autre issue de la biblioth\u00e8que Material Design Icons. Voir la liste compl\u00e8te des ic\u00f4nes disponibles ici.</p>"},{"location":"meta/theme/#changer-la-police-decriture","title":"Changer la police d'\u00e9criture","text":"<p>Material for MkDocs facilite le changement des polices du site, gr\u00e2ce \u00e0 une int\u00e9gration directe avec Google Fonts. Vous pouvez personnaliser \u00e0 la fois la police r\u00e9guli\u00e8re (texte courant) et la police \u00e0 chasse fixe (pour les blocs de code) ou m\u00eame charger des polices personnalis\u00e9es si besoin.</p> <pre><code>theme:\n  font:\n    text: Roboto\n    code: Roboto Mono\n</code></pre>"},{"location":"meta/theme/#utiliser-des-icones-et-emojis","title":"Utiliser des ic\u00f4nes et emojis","text":"<p>Material for MkDocs permet d\u2019int\u00e9grer facilement des ic\u00f4nes et emojis directement dans le contenu de vos pages Markdown, gr\u00e2ce \u00e0 l\u2019extension <code>pymdownx.emoji</code>. Pour cela, ajoutez la configuration suivante dans la section <code>markdown_extensions</code> de votre fichier <code>mkdocs.yml</code> :</p> <pre><code>markdown_extensions:\n  - attr_list\n  - pymdownx.emoji:\n      emoji_index: !!python/name:material.extensions.emoji.twemoji\n      emoji_generator: !!python/name:material.extensions.emoji.to_svg\n</code></pre> <p>Cette configuration permet d\u2019utiliser des emojis dans vos textes et ils seront rendus comme des ic\u00f4nes vectorielles stylis\u00e9es, compatibles avec le th\u00e8me et adaptables au mode clair/sombre. Voir la liste compl\u00e8te des ic\u00f4nes et emojis disponibles ici.</p> <p>\"L'\u00e9diteur me signale une erreur de syntaxe!\"</p> <p>C'est normal. La syntaxe <code>!!python/name:...</code> n'est pas standard YAML et n\u2019est comprise que par PyYAML (le parseur utilis\u00e9 par MkDocs). Vous pouvez ignorer cette erreur.</p>"},{"location":"meta/theme/#protection-des-donnees","title":"Protection des donn\u00e9es","text":"<p>L'utilisation de Google Fonts implique que le navigateur de l\u2019utilisateur envoie une requ\u00eate \u00e0 un serveur Google pour charger les polices. Cette pratique peut poser probl\u00e8me du point de vue de la protection des donn\u00e9es personnelles.</p> <p>En Europe, le R\u00e8glement g\u00e9n\u00e9ral sur la protection des donn\u00e9es (RGPD) stipule que l\u2019adresse IP d\u2019un utilisateur est consid\u00e9r\u00e9e comme une donn\u00e9e personnelle. Or, le chargement de Google Fonts depuis un serveur tiers (comme Google) transmet cette IP sans consentement explicite, ce qui peut contrevenir \u00e0 la l\u00e9gislation, notamment apr\u00e8s plusieurs d\u00e9cisions judiciaires en Allemagne et en Autriche.</p> <p>En Suisse, la Loi f\u00e9d\u00e9rale sur la protection des donn\u00e9es (nLPD) entr\u00e9e en vigueur en 2023 est inspir\u00e9e du RGPD et adopte une d\u00e9finition large des donn\u00e9es personnelles, incluant \u00e9galement les adresses IP.</p> <p>Vous pouvez d\u00e9sactiver compl\u00e8tement le chargement externe en ajoutant ceci dans <code>mkdocs.yml</code> :</p> <pre><code>theme:\n  font: false\n</code></pre> <p>Cela forcera l\u2019utilisation des polices syst\u00e8me locales. Vous pouvez t\u00e9l\u00e9charger les fichiers depuis Google Fonts et les h\u00e9berger dans le dossier <code>docs/</code> ou un sous-dossier (ex. <code>docs/assets/</code>), puis les int\u00e9grer via CSS (voir section pr\u00e9c\u00e9dente).</p> <p>Plugin int\u00e9gr\u00e9</p> <p>Material for MkDocs propose un plugin int\u00e9gr\u00e9 pour renforcer la confidentialit\u00e9. Il d\u00e9sactive automatiquement les appels externes (Google Fonts, scripts, etc.) : <pre><code>  plugins:\n    - privacy\n</code></pre></p> <p>Une autre possibilit\u00e9 est d\u2019ajouter un formulaire de consentement aux cookies (banni\u00e8re ou popup) afin de respecter la l\u00e9gislation sur la protection des donn\u00e9es :</p> <pre><code>extra:\n  consent:\n    title: Accepter les cookies\n    description: &gt;- \n      Ce site utilise des cookies ou des services externes\n      susceptibles de collecter des donn\u00e9es personnelles.\n</code></pre>"},{"location":"meta/theme/#personnaliser-le-logo-et-les-icones","title":"Personnaliser le logo et les ic\u00f4nes","text":"<p>Material for MkDocs permet de personnaliser l\u2019identit\u00e9 visuelle de votre site en ajoutant un logo, une favicon (ic\u00f4ne affich\u00e9e dans l\u2019onglet du navigateur), et m\u00eame des ic\u00f4nes personnalis\u00e9es dans le menu de navigation ou les liens sociaux.</p> <p>Pour ajouter un logo et une favicon, placez vos fichiers image (de pr\u00e9f\u00e9rence au format .png ou .svg) dans le dossier <code>docs/</code> ou un sous-dossier (ex. <code>docs/assets/</code>), puis indiquez leur chemin relatif dans <code>mkdocs.yml</code> :</p> <pre><code>theme:\n  name: material\n  logo: assets/images/logo.svg\n  favicon: assets/images/favicon.png\n</code></pre>"},{"location":"meta/theme/#exemple-de-configuration","title":"Exemple de configuration","text":"mkdocs.yml<pre><code>theme:\n  name: material\n\n  font:\n    text: Source Sans 3\n    code: Source Code Pro\n\n  logo: assets/images/logo.svg\n  favicon: assets/images/favicon.png\n\n  palette:\n    # Mode sombre\n    - scheme: slate\n      toggle:\n        icon: material/weather-sunny\n        name: Passer en mode clair\n      primary: indigo\n      accent: red\n\n    # Mode clair\n    - scheme: default\n      toggle:\n        icon: material/weather-night\n        name: Passer en mode sombre\n      primary: blue\n      accent: red\n\nplugins:\n  - privacy\n\nmarkdown_extensions:\n  - attr_list\n  - pymdownx.emoji:\n      emoji_index: !!python/name:material.extensions.emoji.twemoji\n      emoji_generator: !!python/name:material.extensions.emoji.to_svg\n</code></pre>"},{"location":"en/","title":"Home","text":""},{"location":"en/#welcome-to-the-archives-de-la-construction-moderne-wiki","title":"Welcome to the Archives de la construction moderne wiki","text":"<p>This is knowledge base.</p>"},{"location":"en/#archives-de-la-construction-moderne","title":"Archives de la construction moderne","text":"<p>The Archives de la construction moderne (Acm) preserve and organize original documents (plans, models, photographs, etc.) related to the built environment.</p> <p>Containing technical, spatial, historical and social data, these collections are structured according to the principles of information science, relying on archival standards and interoperable metadata models to ensure their long-term preservation and accessibility. These resources are available to support research, teaching and interdisciplinary projects led by ENAC faculty members and EPFL.</p>"},{"location":"en/meta/info/","title":"About the Wiki","text":"<p>This wiki was created using Material for MkDocs. It is hosted on GitHub Pages.</p>"},{"location":"en/meta/info/#what-is-mkdocs","title":"What is MkDocs?","text":"<p>MkDocs is a static site generator designed for writing technical or professional documentation. It is based on the Markdown language, which allows you to write content in a simple, readable, and portable format. The sites it generates are fast, lightweight, and easy to host \u2014 even on free services like GitHub Pages.</p>"},{"location":"en/meta/info/#what-is-material-for-mkdocs","title":"What is Material for MkDocs?","text":"<p>Material for MkDocs started out as a simple theme for MkDocs, but it has evolved significantly over the years. It now includes many built-in plugins, advanced configuration options, and extensive customization capabilities.</p> <p>To learn more:</p> <ul> <li>Official Markdown documentation: daringfireball.net</li> <li>Official MkDocs documentation: mkdocs.org</li> <li>Official Material for MkDocs documentation: squidfunk.github.io/mkdocs-material</li> <li>Quick-start guide by James Willett: Getting Started with Material for MkDocs</li> </ul>"},{"location":"en/meta/installation/","title":"Installation","text":"<p>This documentation describes how this wiki was deployed. Its purpose is to document the technical steps followed during its creation, while also providing a reproducible guide for those who wish to build a similar site.</p> <p>This guide is based directly on the official Material for MkDocs documentation, and is a condensed, simplified version tailored to the context of this project.</p>"},{"location":"en/meta/installation/#prerequisites","title":"Prerequisites","text":"<p>Before starting the installation, make sure you have the following tools available:</p> <ul> <li> <p> Python, a simple, readable, and widely used programming language. We recommend version 3.4 or later for this guide.</p> <ul> <li> pip, Python's package manager. It allows you to install libraries and tools. It is included by default with Python 3.4 and later.</li> </ul> </li> <li> <p> A code editor. We recommend  VSCodium, an open-source alternative to  Visual Studio Code.</p> </li> <li> <p> A GitHub account, since we\u2019ll be deploying the site via GitHub Pages.</p> </li> </ul> <p>Tip</p> <p>Once installed, you can check if Python works by opening a terminal and typing:</p> <pre><code>python --version\n</code></pre> <p>To check if <code>pip</code> works:</p> <pre><code>pip --version\n</code></pre>"},{"location":"en/meta/installation/#initial-setup","title":"Initial Setup","text":"<p>Open a terminal in the folder where you want to create the project:</p> <ul> <li>On  Windows:  Powershell</li> <li>On  macOS:  Terminal</li> </ul> <p>The terminal runs commands within a specific folder. It's important to navigate to the folder where you want to create your wiki. The <code>cd</code> command (\u201cchange directory\u201d) lets you move through the folder structure from the terminal.</p> <pre><code>cd path/to/my/folder\n</code></pre> <p>Run commands directly from the editor</p> <p>Visual Studio Code and VSCodium include an integrated terminal, which allows you to continue typing commands directly from within the editor. Go to the Terminal menu &gt; New Terminal, or use the keyboard shortcut.</p>"},{"location":"en/meta/installation/#create-a-python-virtual-environment","title":"Create a Python virtual environment","text":"<p>What does this command mean?</p> <p><code>-m venv</code> uses the built-in venv module, which is used to create virtual environments. <code>venv</code> is the name of the folder that will be created in your project (you can choose another name, but <code>venv</code> is a common convention).</p> <p>In the terminal, type the following command:</p> <pre><code>python -m venv venv\n</code></pre>"},{"location":"en/meta/installation/#activate-the-virtual-environment","title":"Activate the virtual environment","text":"<ul> <li>On  Windows: .\\venv\\Scripts\\activate</li> <li>On  macOS: source venv/bin/activate</li> </ul> <p>Activation</p> <p>If everything works correctly, you\u2019ll see the environment name <code>(venv)</code> appear at the beginning of your command prompt.</p> <p>If you close the terminal, you\u2019ll need to reactivate the environment next time using the same command as above.</p>"},{"location":"en/meta/installation/#install-material-for-mkdocs-using-pip","title":"Install Material for MkDocs using <code>pip</code>","text":"<pre><code>pip install mkdocs-material\n</code></pre> <p>This command installs MkDocs, Material for MkDocs, and all the necessary dependencies.</p> <p>After installation, you can check that MkDocs is available by typing <code>mkdocs --version</code>.</p>"},{"location":"en/meta/installation/#open-the-project-folder-in-visual-studio-code-or-vscodium","title":"Open the project folder in Visual Studio Code or VSCodium","text":"<p>What does this command mean?</p> <p><code>code</code> calls the Visual Studio Code / VSCodium application, <code>.</code> means \"current folder\".</p> <p>You can use the following command in your terminal (while inside the correct folder):</p> <pre><code>code .\n</code></pre>"},{"location":"en/meta/installation/#initialize-a-new-mkdocs-site","title":"Initialize a new MkDocs site","text":"<p>In the terminal (with the virtual environment still activated), type the following command:</p> <pre><code>mkdocs new .\n</code></pre> <p>The following structure should be created:</p> <pre><code>.\n\u251c\u2500 docs/\n\u2502  \u2514\u2500 index.md\n\u2514\u2500 mkdocs.yml\n</code></pre> <p>This command creates two important elements:</p> <ul> <li><code>docs/index.md</code>: the home page of the site, written in Markdown. You can edit it freely.</li> <li><code>mkdocs.yml</code>: a configuration file written in YAML (site title, theme, navigation, languages, etc.).</li> </ul> <p>To add a new page to your site, simply create a new <code>.md</code> file in the <code>docs/</code> folder. For example, creating a file named <code>about.md</code> in <code>docs/</code> will make it available at https://mysite/about/.</p> <p>Need a refresher on how to write in Markdown?</p> <p>See our Markdown syntax guide for the basics.</p>"},{"location":"en/meta/installation/#configure-the-site-with-mkdocsyml","title":"Configure the site with <code>mkdocs.yml</code>","text":"<p>Open <code>mkdocs.yml</code> in your editor and replace its content with the following configuration:</p> mkdocs.yml<pre><code>site_name: My project documentation\nsite_url: https://mysite.exemple\ntheme:\n  name: material\n</code></pre>"},{"location":"en/meta/installation/#preview-the-site-locally","title":"Preview the site locally","text":"<p>Now that your site is configured, you can generate and preview it locally in real time as you work on it.</p> <p>In the terminal (with the virtual environment activated), type:</p> <pre><code>mkdocs serve\n</code></pre> <p>Open a browser and go to: http://localhost:8000/</p> <p>Preview your changes in real time</p> <p>As long as the <code>mkdocs serve</code> command is running in your terminal, the site stays visible and updates automatically with each save.</p> <p>When you're done, you can stop the server in the terminal by pressing:</p> <ul> <li>On  Windows : <code>Ctrl + C</code></li> <li>On  macOS : <code>Cmd + C</code></li> </ul>"},{"location":"en/meta/installation/#yaml-schema-validation","title":"YAML Schema Validation","text":"<p>The <code>mkdocs.yml</code> file is central to configuring your site. To avoid syntax or structural errors (which could block site generation), it\u2019s strongly recommended to enable automatic YAML schema validation in your code editor.</p> <p>For Visual Studio Code and VSCodium, search for YAML in the Extensions panel and install the official YAML extension by Red Hat.</p> <p>Look for the <code>settings.json</code> file in your editor\u2019s settings, or create one at the root of the project.</p> <p>Add the following code to that file:</p> settings.json<pre><code>{\n  \"yaml.schemas\": {\n    \"https://squidfunk.github.io/mkdocs-material/schema.json\": \"mkdocs.yml\"\n  },\n  \"yaml.customTags\": [ \n    \"!ENV scalar\",\n    \"!ENV sequence\",\n    \"!relative scalar\",\n    \"tag:yaml.org,2002:python/name:material.extensions.emoji.to_svg\",\n    \"tag:yaml.org,2002:python/name:material.extensions.emoji.twemoji\",\n    \"tag:yaml.org,2002:python/name:pymdownx.superfences.fence_code_format\",\n    \"tag:yaml.org,2002:python/object/apply:pymdownx.slugs.slugify mapping\"\n  ]\n}\n</code></pre>"}]}