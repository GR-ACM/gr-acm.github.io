{"config":{"lang":["fr","en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Bienvenue sur le wiki des Archives de la construction moderne","text":"<p>Ceci est un espace de documentation technique pour centraliser les connaissances, proc\u00e9dures et outils des Archives de la construction moderne.</p> <p>Pour savoir comment ce site a \u00e9t\u00e9 cr\u00e9\u00e9 ou apprendre \u00e0 en cr\u00e9er un similaire, consultez la section \u00c0 propos du wiki.</p>"},{"location":"#archives-de-la-construction-moderne","title":"Archives de la construction moderne","text":"<p>Les Archives de la construction moderne (Acm) conservent et organisent des documents originaux (plans, maquettes, photos\u2026) li\u00e9s \u00e0 l'environnement construit.</p> <p>Ces ensembles, porteurs de donn\u00e9es techniques, spatiales, historiques et sociales, sont structur\u00e9s selon les principes de l'information science, avec des standards archivistiques et des mod\u00e8les de m\u00e9tadonn\u00e9es interop\u00e9rables. Cette organisation garantit leur p\u00e9rennit\u00e9 et leur accessibilit\u00e9. Ces ressources sont \u00e0 disposition de la recherche, de l'enseignement et des projets interdisciplinaires men\u00e9s par la Facult\u00e9 ENAC et l'EPFL.</p>"},{"location":"meta/advanced/","title":"Configuration avanc\u00e9e","text":""},{"location":"meta/advanced/#support-bilingue","title":"Support bilingue","text":"<p>Le wiki des Archives de la construction moderne (Acm) utilise un syst\u00e8me de documentation bilingue fran\u00e7ais/anglais, mis en \u0153uvre gr\u00e2ce au plugin <code>mkdocs-static-i18n</code> pour MkDocs. Ce plugin permet de g\u00e9rer plusieurs langues au sein d\u2019un m\u00eame d\u00e9p\u00f4t, tout en conservant une structure de navigation adapt\u00e9e \u00e0 chaque langue. Consultez la documentation officielle ici.</p>"},{"location":"meta/advanced/#installation-du-plugin","title":"Installation du plugin","text":"<p>Dans l\u2019environnement Python utilis\u00e9 pour g\u00e9n\u00e9rer le site, le plugin <code>mkdocs-static-i18n</code> doit \u00eatre install\u00e9 :</p> <pre><code>pip install mkdocs-static-i18n\n</code></pre> <p>Puis activ\u00e9 dans le fichier <code>mkdocs.yml</code>:</p> <pre><code>features:\n  - i18n\n\nplugins:\n  - i18n\n</code></pre> <p>Enfin, si vous avez cr\u00e9\u00e9 un workflow GitHub Actions, par exemple avec le fichier <code>.github/workflows/ci.yml</code>, ajoutez une commande pour installer les d\u00e9pendances. Consultez la section publication pour plus d'information sur la cr\u00e9ation de ce fichier.</p> <p>Dans la section <code>steps:</code> avant l\u2019appel \u00e0 <code>mkdocs gh-deploy</code> :</p> ci.yml<pre><code>steps:\n  - run: pip install mkdocs-material\n  - run: pip install mkdocs-static-i18n\n  - run: mkdocs gh-deploy --force\n</code></pre>"},{"location":"meta/advanced/#structure-et-navigation","title":"Structure et navigation","text":"<pre><code>docs/\n\u251c\u2500\u2500 index.fr.md\n\u251c\u2500\u2500 index.en.md\n\u2514\u2500\u2500 wiki/\n    \u251c\u2500\u2500 overview.fr.md\n    \u251c\u2500\u2500 overview.en.md\n    \u251c\u2500\u2500 installation.fr.md\n    \u2514\u2500\u2500 installation.en.md\n</code></pre> <p>Dans cette configuration, les fichiers sont nomm\u00e9s avec des suffixes de langue (<code>.fr.md</code>, <code>.en.md</code>, etc.) et plac\u00e9s directement dans le dossier <code>docs/</code>. Le plugin identifie les fichiers en fonction de leur suffixe de langue et il n'est pas n\u00e9cessaire d'inclure le suffixe dans <code>nav:</code>.</p> <p>La barre de recherche peut dispara\u00eetre, le plugin search doit \u00eatre d\u00e9clar\u00e9 explicitement.</p> <pre><code>plugins:\n  - search\n  - privacy\n  - i18n:\n      languages:\n        - locale: fr\n          name: Fran\u00e7ais\n          build: true\n          default: true\n          nav:\n            - Accueil: index.md\n            - \u00c0 propos:\n                - Pr\u00e9sentation technique: wiki/overview.md\n                - Installation initiale: wiki/installation.md\n\n        - locale: en\n          name: English\n          build: true\n          nav:\n            - Home: index.md\n            - About:\n                - Technical overview: wiki/overview.md\n                - Installation: wiki/installation.md\n</code></pre> <p>Dans cet exemple, le fran\u00e7ais est d\u00e9fini comme langue par d\u00e9faut. L\u2019URL racine du site, <code>https://mon-site/</code>, affiche automatiquement la version fran\u00e7aise. Cette URL correspond au fichier <code>docs/index.fr.md</code>, qui devient la page d\u2019accueil. L\u2019URL <code>https://mon-site/en/</code> affiche la version anglaise du site. Cette URL correspond au fichier <code>docs/index.en.md</code>.</p> URL Fichier source utilis\u00e9 Langue <code>https://mon-site/</code> <code>docs/index.fr.md</code>  Fran\u00e7ais (d\u00e9faut) <code>https://mon-site/en/</code> <code>docs/index.en.md</code>  Anglais"},{"location":"meta/installation/","title":"Installation","text":"<p>Ce wiki a \u00e9t\u00e9 cr\u00e9\u00e9 \u00e0 l\u2019aide de Material for MkDocs. Il est h\u00e9berg\u00e9 sur GitHub Pages.</p> <p>Cette documentation d\u00e9crit la mani\u00e8re dont ce wiki a \u00e9t\u00e9 d\u00e9ploy\u00e9. Elle a pour objectif de documenter les \u00e9tapes techniques suivies lors de sa cr\u00e9ation, tout en fournissant un guide reproductible pour celles et ceux qui souhaiteraient construire un site similaire.</p> <p>Ce guide s\u2019appuie directement sur la documentation officielle de Material for MkDocs, dont il constitue une version condens\u00e9e, simplifi\u00e9e et adapt\u00e9e au contexte de ce projet.</p>"},{"location":"meta/installation/#prerequis","title":"Pr\u00e9requis","text":"<p>Avant de commencer l\u2019installation, assurez-vous de disposer des outils suivants :</p> <ul> <li> <p> Python, un langage de programmation simple, lisible et largement utilis\u00e9. Nous recommandons la version 3.4 ou plus r\u00e9cente pour suivre ce guide.</p> <ul> <li> pip, le gestionnaire de paquets de Python. Il permet d\u2019installer des biblioth\u00e8ques et des outils. Il est inclus par d\u00e9faut avec Python \u00e0 partir de la version 3.4.</li> </ul> </li> <li> <p> Un \u00e9diteur de code. Nous recommandons  VSCodium, une alternative open source \u00e0  Visual Studio Code.</p> </li> <li> <p> Un compte GitHub, puisque nous allons d\u00e9ployer le site via le service GitHub Pages.</p> </li> </ul> <p>Conseil</p> <p>Une fois install\u00e9, vous pouvez v\u00e9rifier que Python fonctionne en ouvrant un terminal et en tapant :</p> <pre><code>python --version\n</code></pre> <p>Pour v\u00e9rifier que <code>pip</code> fonctionne :</p> <pre><code>pip --version\n</code></pre>"},{"location":"meta/installation/#installation-initiale","title":"Installation initiale","text":"<p>Ouvrez un terminal dans le dossier o\u00f9 vous souhaitez cr\u00e9er le projet :</p>  Windows macOS <p>Ouvrez  Powershell</p> <p>Ouvrez  Terminal</p> <p>Le terminal ex\u00e9cute les commandes dans un dossier pr\u00e9cis. Il est important de vous placer dans le dossier o\u00f9 vous souhaitez cr\u00e9er votre wiki. La commande <code>cd</code> (\u201cchange directory\u201d) permet de naviguer dans l\u2019arborescence des dossiers depuis le terminal.</p> <pre><code>cd chemin/vers/mon/dossier\n</code></pre> <p>Ex\u00e9cuter les commandes depuis l'\u00e9diteur</p> <p>Visual Studio Code et VSCodium disposent d'un terminal int\u00e9gr\u00e9, qui vous permet de continuer \u00e0 taper vos commandes directement depuis l\u2019\u00e9diteur. Allez dans le menu Terminal &gt; Nouveau terminal, ou utilisez le raccourci.</p>"},{"location":"meta/installation/#creer-un-environnement-virtuel-python","title":"Cr\u00e9er un environnement virtuel Python","text":"<p>Que signifie cette commande ?</p> <p><code>-m venv</code> utilise le module int\u00e9gr\u00e9 venv, qui sert \u00e0 cr\u00e9er des environnements virtuels. <code>venv</code> est le nom du dossier qui sera cr\u00e9\u00e9 dans votre projet (vous pouvez choisir un autre nom, mais <code>venv</code> est une convention courante).</p> <p>Dans le terminal, tapez la commande suivante :</p> <pre><code>python -m venv venv\n</code></pre>"},{"location":"meta/installation/#activer-lenvironnement-virtuel","title":"Activer l'environnement virtuel","text":"Windows macOS <pre><code>.\\venv\\Scripts\\activate\n</code></pre> <pre><code>source venv/bin/activate\n</code></pre> <p>Activation</p> <p>Si tout fonctionne correctement, vous verrez le nom de l\u2019environnement <code>(venv)</code> appara\u00eetre au d\u00e9but de votre ligne de commande.</p> <p>\u00c0 chaque fois que vous fermez le terminal, vous devrez r\u00e9activer l\u2019environnement la prochaine fois, avec la m\u00eame commande que ci-dessus.</p>"},{"location":"meta/installation/#installer-material-for-mkdocs-avec-pip","title":"Installer Material for MkDocs avec <code>pip</code>","text":"<pre><code>pip install mkdocs-material\n</code></pre> <p>Cette commande installe \u00e0 la fois MkDocs, Material for MkDocs, et toutes les d\u00e9pendances n\u00e9cessaires.</p> <p>Apr\u00e8s l\u2019installation, vous pouvez v\u00e9rifier que MkDocs est bien disponible en tapant <code>mkdocs --version</code>.</p>"},{"location":"meta/installation/#ouvrir-le-dossier-du-projet-dans-visual-studio-code-ou-vscodium","title":"Ouvrir le dossier du projet dans Visual Studio Code ou VSCodium","text":"<p>Que signifie cette commande ?</p> <p><code>code</code> appelle l\u2019application Visual Studio Code / VSCodium,  <code>.</code> signifie \u201cle dossier courant\u201d.</p> <p>Vous pouvez utiliser la commande suivante dans votre terminal (dans le bon dossier) :</p> <pre><code>code .\n</code></pre> <p>Si vous ouvrez le dossier directement depuis Visual Studio Code ou VSCodium, cette op\u00e9ration n'est pas n\u00e9cessaire.</p>"},{"location":"meta/installation/#initialiser-un-nouveau-site-mkdocs","title":"Initialiser un nouveau site MkDocs","text":"<p>Dans le terminal (toujours avec l\u2019environnement virtuel activ\u00e9), tapez la commande suivante :</p> <pre><code>mkdocs new .\n</code></pre> <p>La structure suivante devrait avoir \u00e9t\u00e9 cr\u00e9\u00e9e :</p> <pre><code>.\n\u251c\u2500 docs/\n\u2502  \u2514\u2500 index.md\n\u2514\u2500 mkdocs.yml\n</code></pre> <p>Cette commande cr\u00e9e deux \u00e9l\u00e9ments importants :</p> <ul> <li><code>docs/index.md</code> : la premi\u00e8re page du site (accueil). \u00c9crite en Markdown, elle peut \u00eatre modifi\u00e9e librement.</li> <li><code>mkdocs.yml</code> : un fichier de configuration r\u00e9dig\u00e9 en YAML (titre, th\u00e8me, navigation, langues, etc.).</li> </ul> <p>Pour ajouter une nouvelle page \u00e0 votre site, il suffit de cr\u00e9er un fichier <code>.md</code> dans le dossier <code>docs/</code>. Par exemple, si vous cr\u00e9ez un fichier <code>apropos.md</code>, il sera accessible \u00e0 l\u2019adresse https://mon-site/apropos/.</p> <p>Besoin d\u2019un rappel sur la syntaxe Markdown ?</p> <p>Consultez notre guide de syntaxe Markdown pour les bases.</p>"},{"location":"meta/installation/#configurer-le-site-avec-mkdocsyml","title":"Configurer le site avec <code>mkdocs.yml</code>","text":"<p>Ouvrez <code>mkdocs.yml</code> dans votre \u00e9diteur et remplacez son contenu par la configuration suivante :</p> mkdocs.yml<pre><code>site_name: Documentation de mon projet\nsite_url: https://mon-site.exemple\ntheme:\n  name: material\n</code></pre>"},{"location":"meta/installation/#previsualiser-le-site-en-local","title":"Pr\u00e9visualiser le site en local","text":"<p>Maintenant que votre site est configur\u00e9, vous pouvez le g\u00e9n\u00e9rer et le visualiser localement en temps r\u00e9el pendant que vous travaillez dessus.</p> <p>Dans le terminal (avec l\u2019environnement virtuel activ\u00e9), tapez :</p> <pre><code>mkdocs serve\n</code></pre> <p>Ouvrez un navigateur \u00e0 l'adresse : http://localhost:8000/</p> <p>Visualisez vos modifications en temps r\u00e9el</p> <p>Tant que la commande <code>mkdocs serve</code> est active dans votre terminal, le site reste visible et se met \u00e0 jour automatiquement \u00e0 chaque sauvegarde.</p> <p>Quand vous avez termin\u00e9, vous pouvez arr\u00eater le serveur en appuyant dans le terminal :</p>  Windows macOS <p>Appuyer simultan\u00e9ment sur Ctrl+C</p> <p>Appuyer simultan\u00e9ment sur Cmd+C</p>"},{"location":"meta/installation/#validation-automatique-du-schema-yaml","title":"Validation automatique du sch\u00e9ma YAML","text":"<p>Le fichier <code>mkdocs.yml</code> est central dans la configuration de votre site. Pour \u00e9viter les erreurs de syntaxe ou de structure (qui peuvent bloquer la g\u00e9n\u00e9ration du site), il est fortement recommand\u00e9 d\u2019activer la validation automatique du sch\u00e9ma YAML dans votre \u00e9diteur de code.</p> <p>Pour Visual Studio Code et VSCodium, recherchez YAML dans le panneau des extensions et installez l'extension officielle YAML par Red Hat.</p> <p>Recherchez le fichier <code>settings.json</code> dans les param\u00e8tres ou cr\u00e9ez-en un autre \u00e0 la racine du projet.</p> <p>Ajoutez le code suivant dans ce fichier :</p> settings.json<pre><code>{\n  \"yaml.schemas\": {\n    \"https://squidfunk.github.io/mkdocs-material/schema.json\": \"mkdocs.yml\"\n  },\n  \"yaml.customTags\": [ \n    \"!ENV scalar\",\n    \"!ENV sequence\",\n    \"!relative scalar\",\n    \"tag:yaml.org,2002:python/name:material.extensions.emoji.to_svg\",\n    \"tag:yaml.org,2002:python/name:material.extensions.emoji.twemoji\",\n    \"tag:yaml.org,2002:python/name:pymdownx.superfences.fence_code_format\",\n    \"tag:yaml.org,2002:python/object/apply:pymdownx.slugs.slugify mapping\"\n  ]\n}\n</code></pre>"},{"location":"meta/installation/#publication","title":"Publication","text":"<p>Apr\u00e8s avoir cr\u00e9\u00e9 et personnalis\u00e9 votre site en local, vous pouvez le mettre en ligne gratuitement avec GitHub Pages. Consultez la section publication pour savoir comment publier votre site pour la premi\u00e8re fois, puis comment le mettre \u00e0 jour facilement par la suite.</p>"},{"location":"meta/overview/","title":"\u00c0 propos du wiki","text":"<p>Ce wiki a \u00e9t\u00e9 con\u00e7u comme un espace de documentation technique et collaborative pour centraliser les connaissances, proc\u00e9dures et outils li\u00e9s \u00e0 notre environnement de travail.</p> <p>Il s\u2019appuie sur MkDocs et le th\u00e8me Material for MkDocs, deux outils open source sp\u00e9cialement con\u00e7us pour la r\u00e9daction de documentation structur\u00e9e et lisible, enti\u00e8rement r\u00e9dig\u00e9e en Markdown. Il est h\u00e9berg\u00e9 sur GitHub Pages.</p>"},{"location":"meta/overview/#objectifs","title":"Objectifs","text":"<ul> <li>Documenter nos m\u00e9thodes de travail et nos bonnes pratiques</li> <li>Faciliter la formation des nouveaux collaborateurs</li> <li>Garantir la p\u00e9rennit\u00e9 des connaissances au sein de l\u2019\u00e9quipe</li> </ul> <p>Ce wiki est en constante \u00e9volution. N\u2019h\u00e9sitez pas \u00e0 proposer des ajouts ou des corrections.</p>"},{"location":"meta/overview/#quest-ce-que-mkdocs","title":"Qu'est-ce que MkDocs ?","text":"<p>MkDocs est un g\u00e9n\u00e9rateur de sites statiques con\u00e7u pour la r\u00e9daction de documentation technique ou professionnelle. Il s\u2019appuie sur le langage Markdown, ce qui permet d\u2019\u00e9crire du contenu de mani\u00e8re simple, lisible et portable. Les sites g\u00e9n\u00e9r\u00e9s sont rapides, l\u00e9gers et faciles \u00e0 h\u00e9berger, y compris sur des services gratuits comme GitHub Pages.</p>"},{"location":"meta/overview/#quest-ce-que-material-for-mkdocs","title":"Qu'est-ce que Material for MkDocs ?","text":"<p>Material for MkDocs a commenc\u00e9 comme un simple th\u00e8me pour MkDocs, mais a beaucoup \u00e9volu\u00e9 au fil des ann\u00e9es. Il int\u00e8gre nativement de nombreux plugins, des options de configuration avanc\u00e9es et de nombreuses possibilit\u00e9s de personnalisation.</p>"},{"location":"meta/overview/#pour-en-savoir-plus","title":"Pour en savoir plus","text":"<ul> <li>Documentation officielle de Markdown : daringfireball.net</li> <li>Documentation officielle de MkDocs : mkdocs.org</li> <li>Documentation officielle de Material for MkDocs :  squidfunk.github.io/mkdocs-material</li> <li>Guide de d\u00e9marrage rapide par James Willett :  Getting Started with Material for MkDocs</li> </ul>"},{"location":"meta/publish/","title":"Publier le site","text":"<p>Apr\u00e8s avoir cr\u00e9\u00e9 et personnalis\u00e9 votre site en local, vous pouvez le mettre en ligne gratuitement avec GitHub Pages. Cette section vous explique comment faire la premi\u00e8re publication, puis comment le mettre \u00e0 jour facilement par la suite.</p>"},{"location":"meta/publish/#prerequis","title":"Pr\u00e9requis","text":"<p>Assurez-vous d\u2019avoir :</p> <ul> <li> Un compte GitHub</li> <li> Un d\u00e9p\u00f4t public ou priv\u00e9 (ex. : <code>nom-utilisateur/mon-wiki</code>)</li> <li> Un projet MkDocs fonctionnel avec un fichier <code>mkdocs.yml</code></li> <li> Activ\u00e9 l\u2019environnement virtuel Python (venv), si ce n\u2019est pas d\u00e9j\u00e0 fait.</li> </ul>"},{"location":"meta/publish/#fichier-de-configuration-pour-github-actions","title":"Fichier de configuration pour Github Actions","text":"<p>Dans un dossier <code>.github/workflows/</code>, cr\u00e9ez un fichier nomm\u00e9 <code>ci.yml</code> :</p> <pre><code>name: ci \non:\n  push:\n    branches:\n      - master \n      - main\npermissions:\n  contents: write\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v4\n      - name: Configure Git Credentials\n        run: |\n          git config user.name github-actions[bot]\n          git config user.email 41898282+github-actions[bot]@users.noreply.github.com\n      - uses: actions/setup-python@v5\n        with:\n          python-version: 3.x\n      - run: echo \"cache_id=$(date --utc '+%V')\" &gt;&gt; $GITHUB_ENV \n      - uses: actions/cache@v4\n        with:\n          key: mkdocs-material-${{ env.cache_id }}\n          path: ~/.cache \n          restore-keys: |\n            mkdocs-material-\n      - run: pip install mkdocs-material \n      - run: mkdocs gh-deploy --force\n</code></pre> <p>Si vous utilisez le plugin <code>mkdocs-static-i18n</code> :</p> <p>Dans la section <code>steps:</code> avant l\u2019appel \u00e0 <code>mkdocs gh-deploy</code> :</p> ci.yml<pre><code>steps:\n  - run: pip install mkdocs-material\n  - run: pip install mkdocs-static-i18n\n  - run: mkdocs gh-deploy --force\n</code></pre>"},{"location":"meta/publish/#deployer-le-site-sur-github-pages","title":"D\u00e9ployer le site sur Github Pages","text":"<p>Si n\u00e9cessaire, arr\u00eatez le serveur en appuyant dans le terminal :</p>  Windows macOS <p>Appuyer simultan\u00e9ment sur Ctrl+C</p> <p>Appuyer simultan\u00e9ment sur Cmd+C</p> <p>Initialisez un d\u00e9p\u00f4t Git dans le dossier du projet \u00e0 l'aide de cette commande, dans le terminal :</p> <pre><code>git init\n</code></pre> <p>fichier <code>.gitignore</code></p> <p>Optionnellement, vous pouvez ajouter un fichier <code>.gitignore</code> \u00e0 la racine de votre projet. Le fichier <code>.gitignore</code> est un fichier sp\u00e9cial utilis\u00e9 par Git pour lui dire quels fichiers ou dossiers il ne doit pas pousser sur GitHub. Pour en savoir plus, consultez la page d\u00e9di\u00e9e. Vous pouvez \u00e9galement t\u00e9l\u00e9charger directement le fichier <code>.gitignore</code> de ce wiki depuis le d\u00e9p\u00f4t GitHub.</p> <p>Ajoutez tous les fichiers modifi\u00e9s ou nouveaux du dossier courant et de ses sous-dossiers \u00e0 la zone de pr\u00e9paration avec la commande :</p> <pre><code>git add .\n</code></pre> <p>Optionnellement, vous pouvez contr\u00f4ler ce que vous venez d'ajouter au prochain commit avec la commande :</p> <pre><code>git status\n</code></pre> <p>Vous pouvez maintenant lancer le commit avec la commande (<code>-m \"...\"</code> d\u00e9termine le message d'accompagnement) :</p> <pre><code>git commit -m \"Initial commit\"\n</code></pre> <p>Entrez la commande suivante, avec l'adresse de votre d\u00e9p\u00f4t Github. Vous pouvez la copier directement depuis la page de votre d\u00e9p\u00f4t.</p> <pre><code>git remote add origin git#@github.com:nom-utilisateur/mon-wiki.git\n</code></pre> <p>Vous pouvez maintenant pousser vos fichiers vers le d\u00e9p\u00f4t :</p> <pre><code>git push origin main\n</code></pre> <p>\u00c0 partir de la page de votre d\u00e9p\u00f4t :  </p> <ul> <li>Cliquez sur Settings &gt; Pages</li> <li> <p>Sous Build and deployment :</p> <ul> <li>Source: <code>Deploy from a branch</code></li> <li>Branch: <code>gh-pages</code></li> </ul> </li> <li> <p>Cliquez sur <code>Save</code>.</p> </li> </ul> <p>Dans <code>Actions</code>, un nouveau workflow est apparu pour le d\u00e9ploiement de votre site. Lorsque votre site sera d\u00e9ploy\u00e9, une adresse <code>https://nom-utilisateur.github.io/mon-wiki</code> appara\u00eetra. Cette action peut prendre quelques minutes.</p> <p>F\u00e9licitations, vous avez d\u00e9ploy\u00e9 votre site!</p>"},{"location":"meta/publish/#mettre-a-jour-le-site","title":"Mettre \u00e0 jour le site","text":"<p>Une fois vos modifications termin\u00e9es, d\u00e9ployez \u00e0 nouveau votre site avec la commande :</p> Si vous avez cr\u00e9\u00e9 un fichier <code>.gitignore</code> <p>Si vous avez cr\u00e9\u00e9 ou modifi\u00e9 votre fichier <code>.gitignore</code> entre deux mises \u00e0 jour, vous devrez supprimer les fichiers de l'index Git. Le fichier <code>.gitignore</code> emp\u00eache Git de suivre de nouveaux fichiers correspondants, mais n'a aucun effet sur les fichiers d\u00e9j\u00e0 suivis. <pre><code>git rm -r --cached .\n</code></pre></p> <pre><code>git add .\n</code></pre> <pre><code>git commit -m \"Mise \u00e0 jour\"\n</code></pre> <pre><code>git push origin main\n</code></pre> <p>La nouvelle version est automatiquement publi\u00e9e sur la branche <code>main</code> et sur la branche <code>gh-pages</code> de votre d\u00e9p\u00f4t. Aucune autre action n\u2019est n\u00e9cessaire. Tant que votre d\u00e9p\u00f4t est configur\u00e9 pour \u00eatre d\u00e9ploy\u00e9 depuis la branche <code>gh-pages</code>, votre site sera mis \u00e0 jour automatiquement.</p>"},{"location":"meta/publish/#depannage","title":"D\u00e9pannage","text":"<p>Voici quelques probl\u00e8mes courants que vous pourriez rencontrer lors de la mise \u00e0 jour ou du d\u00e9ploiement de votre site avec Git et MkDocs, ainsi que des solutions pour les r\u00e9soudre.</p>"},{"location":"meta/publish/#erreur-failed-to-push-some-refs","title":"Erreur : <code>failed to push some refs</code>","text":"<p>Lors d'une mise \u00e0 jour, vous pouvez rencontrer cette erreur :</p> <pre><code>git push origin main\nTo https://github.com/utilisateur/mon-repo.git\n! [rejected]        main -&gt; main (fetch first)\nerror: failed to push some refs to 'https://github.com/utilisateur/mon-repo.git'\nhint: Updates were rejected because the remote contains work that you do not have locally.\nhint: This is usually caused by another repository pushing to the same ref.\nhint: If you want to integrate the remote changes, use\nhint: 'git pull' before pushing again.\nhint: See the 'Note about fast-forwards' in 'git push --help' for details.\n</code></pre> <p>Cause : Vous essayez de pousser (<code>git push</code>) alors que des modifications existent d\u00e9j\u00e0 sur la branche distante <code>main</code>, par exemple si vous avez modifi\u00e9 un fichier directement sur GitHub (comme un <code>README.md</code>).</p> <p>Solution : Ex\u00e9cutez une commande <code>pull</code> pour r\u00e9cup\u00e9rer les modifications distantes avant de pousser \u00e0 nouveau :</p> <pre><code>git pull origin main --rebase\ngit push origin main\n</code></pre> <p>Que fait <code>--rebase</code> ?</p> <p>L\u2019option <code>--rebase</code> permet d\u2019\u00e9viter les commits de fusion inutiles en int\u00e9grant proprement les changements distants dans votre historique local.</p>"},{"location":"meta/structure/","title":"Structuration du contenu","text":""},{"location":"meta/structure/#markdown","title":"Markdown","text":"<p>Ce site est construit avec Material for MkDocs, qui utilise le langage Markdown pour \u00e9crire le contenu des pages. Markdown est un langage l\u00e9ger de balisage qui permet de formater du texte de mani\u00e8re simple, lisible et rapide, sans avoir besoin de conna\u00eetre le HTML. Cette section s'appuie directement sur  The Markdown Guide.</p> <p>Voici les principales r\u00e8gles de syntaxe Markdown \u00e0 conna\u00eetre :</p>"},{"location":"meta/structure/#titres","title":"Titres","text":"<p>Markdown permet de structurer le contenu avec des niveaux de titres allant de <code>#</code> (niveau 1) \u00e0 <code>######</code> (niveau 6). Material for MkDocs g\u00e9n\u00e8re automatiquement la table des mati\u00e8res \u00e0 partir des titres de niveau 2 (<code>##</code>) et 3 (<code>###</code>).</p> <pre><code># Titre de niveau 1\n## Titre de niveau 2\n### Titre de niveau 3\n</code></pre> <p>N'utilisez qu'un seul titre de niveau 1 (<code>#</code>) par page. Il est g\u00e9n\u00e9ralement utilis\u00e9 pour le titre principal et repris automatiquement par MkDocs comme nom de page.</p> <p>Utilisez une hi\u00e9rarchie logique des titres (<code>##</code>, <code>###</code>, etc.) pour que la table des mati\u00e8res soit claire.</p> <p>Compatibilit\u00e9</p> <p>Les applications Markdown ne g\u00e8rent pas toutes de la m\u00eame fa\u00e7on l\u2019absence d\u2019espace entre les di\u00e8ses (#) et le titre. Pour une compatibilit\u00e9 maximale :</p> <ul> <li> <p>Ajoutez un espace entre les <code>#</code> et le texte du titre.</p> <p><code>## Mon titre</code> </p> <p><code>##Mon titre</code> </p> </li> <li> <p>Ajoutez une ligne vide avant et apr\u00e8s chaque titre. Cela garantit un rendu stable dans tous les moteurs de rendu Markdown.</p> </li> </ul> <pre><code>Ajoutez une ligne vide avant...\n\n## Titre\n\n...et apr\u00e8s chaque titre ou bloc.\n</code></pre>"},{"location":"meta/structure/#paragraphes","title":"Paragraphes","text":"<p>En Markdown, un paragraphe est simplement une ou plusieurs lignes de texte, s\u00e9par\u00e9es par une ligne vide. Par d\u00e9faut, si vous appuyez simplement sur Enter sans ajouter de ligne vide, le texte sera fusionn\u00e9 en un seul paragraphe.</p> <p>Par exemple :</p> <pre><code>Ligne 1\nLigne 2\n</code></pre> <p>Cela affichera une seule ligne continue, comme : Ligne 1 Ligne 2</p> <p>Cependant, cela reste utile pour rendre votre fichier plus lisible.</p> <p>Pour ins\u00e9rer un saut de ligne manuel sans cr\u00e9er un nouveau paragraphe, ajoutez deux espaces \u00e0 la fin de la ligne :</p> <pre><code>Ligne 1\u2423\u2423\nLigne 2\n</code></pre>"},{"location":"meta/structure/#texte-en-evidence","title":"Texte en \u00e9vidence","text":"<p>Markdown permet de mettre en valeur du texte avec le gras, l'italique et les deux \u00e0 la fois.</p> <pre><code>*italique*\n**gras**\n***italique et gras***\n</code></pre> <p>Vous pouvez aussi appliquer l\u2019emphase \u00e0 l\u2019int\u00e9rieur d\u2019un mot, sans espaces, comme ceci : <code>incroy**able**</code> \u2192 incroyable</p>"},{"location":"meta/structure/#listes","title":"Listes","text":"<p>Markdown permet de cr\u00e9er des listes non ordonn\u00e9es (puces) ou ordonn\u00e9es (num\u00e9rot\u00e9es), avec une syntaxe simple. Pour imbriquer une sous-liste, ajoutez au moins 2 espaces ou une tabulation avant l\u2019\u00e9l\u00e9ment.</p> <p>Liste non ordonn\u00e9e (puces)</p> <p>Pour cr\u00e9er une liste \u00e0 puces, vous pouvez utiliser les symboles <code>-</code>, <code>*</code> et <code>+</code> devant chaque \u00e9l\u00e9ment. Les trois fonctionnent, mais il est recommand\u00e9 de rester coh\u00e9rent dans un m\u00eame fichier.</p> <pre><code>- \u00c9l\u00e9ment 1\n- \u00c9l\u00e9ment 2\n    - \u00c9l\u00e9ment imbriqu\u00e9\n</code></pre> <p>Liste ordonn\u00e9e (num\u00e9rot\u00e9e)</p> <p>Utilisez des chiffres suivis d\u2019un point (<code>1.</code>, <code>2.</code>, etc.) pour cr\u00e9er une liste num\u00e9rot\u00e9e. Les num\u00e9ros n\u2019ont pas besoin d\u2019\u00eatre dans l\u2019ordre (Markdown les renum\u00e9rote automatiquement), mais la premi\u00e8re ligne doit commencer par <code>1.</code>. Pour une meilleure compatibilit\u00e9 entre les moteurs Markdown, utilisez toujours le point <code>.</code> (et non une parenth\u00e8se) apr\u00e8s les chiffres.</p> <pre><code>1. Premier\n2. Deuxi\u00e8me\n    1. \u00c9l\u00e9ment imbriqu\u00e9\n3. Troisi\u00e8me\n</code></pre> <p>Si vous devez commencer une liste non ordonn\u00e9e par un nombre suivi d\u2019un point (par ex. \"3.5 litres\"), ajoutez un antislash (<code>\\</code>) pour \u00e9viter que Markdown interpr\u00e8te cela comme une liste.</p> <p>Si vous souhaitez un contr\u00f4le plus strict du comportement des listes (notamment l\u2019imbrication), vous pouvez activer l\u2019extension <code>sane_lists</code> dans <code>mkdocs.yml</code> :</p> mkdocs.yml<pre><code>markdown_extensions:\n  - sane_lists\n</code></pre> <p>Markdown ne renum\u00e9rotera plus automatiquement les \u00e9l\u00e9ments de liste.</p>"},{"location":"meta/structure/#liens-et-images","title":"Liens et images","text":"<p>Liens</p> <p>En Markdown, vous pouvez ins\u00e9rer facilement des liens cliquables avec une syntaxe simple. Vous pouvez ajouter un titre optionnel, qui s'affichera au survol du lien. Pour cela, ajoutez-le entre guillemets, juste apr\u00e8s l\u2019URL.</p> <pre><code>[Texte du lien](https://exemple.com \"Ceci est un exemple\")\n</code></pre> <p>Pas d\u2019espace entre <code>[</code> et <code>(</code> dans les liens. Survoler le lien affichera : Ceci est un exemple.</p> <p>Liens au format r\u00e9f\u00e9rence</p> <p>Markdown permet aussi de d\u00e9finir des liens de mani\u00e8re plus lisible, en s\u00e9parant le texte du lien de l\u2019URL. Cela peut \u00eatre utile dans des documents longs, pour ne pas surcharger les paragraphes avec des URLs.</p> <pre><code>[Documentation][material-mkdocs]\n\n[material-mkdocs]: https://squidfunk.github.io/mkdocs-material/\n</code></pre> <p>Vous pouvez placer la r\u00e9f\u00e9rence (<code>[material-mkdocs]: ...</code>) n\u2019importe o\u00f9 dans le fichier, g\u00e9n\u00e9ralement \u00e0 la fin de la page.</p> <p>Si vous souhaitez transformer rapidement une URL brute ou une adresse email en lien, vous pouvez simplement l\u2019entourer de chevrons &lt; &gt; :</p> <p>adresse@exemple.com</p> <p>Images</p> <p>Les images fonctionnent de mani\u00e8re similaire :</p> <pre><code>![Texte alternatif](chemin/vers/image.png)\n</code></pre>"},{"location":"meta/structure/#citations-et-code","title":"Citations et code","text":"<p>En Markdown, vous pouvez ins\u00e9rer une citation ou un bloc de texte mis en retrait en utilisant le symbole <code>&gt;</code> en d\u00e9but de ligne. Vous pouvez \u00e9galement imbriquer plusieurs niveaux de citation.</p> <pre><code>&gt; Ceci est une citation.\n&gt;&gt; Citation imbriqu\u00e9e.\n</code></pre> <p>Ceci est une citation.</p> <p>Citation imbriqu\u00e9e.</p> <p>Material for MkDocs propose une alternative aux citations Markdown : les encadr\u00e9s ou blocs informatifs. Elles permettent de structurer visuellement l'information gr\u00e2ce \u00e0 des ic\u00f4nes, des couleurs, et des types personnalisables (astuce, avertissement, note, etc.).</p> <p>Exemple</p> <p>Ceci est une citation.</p> <p>Ce type d\u2019encadr\u00e9 sera expliqu\u00e9 dans une section d\u00e9di\u00e9e.</p> <p>Pour mettre en forme un mot ou une phrase comme du code, entourez-le de backticks <code>`</code>, aussi appel\u00e9s accents graves.</p> <pre><code>`code en ligne`\n</code></pre> <p>Si le mot ou la phrase contient d\u00e9j\u00e0 un backtick, vous pouvez l\u2019\u00e9chapper en utilisant deux backticks au lieu d\u2019un seul.</p> <p>Et les blocs de code ?</p> <p>Pour afficher plusieurs lignes de code dans un bloc d\u00e9di\u00e9, utilisez des blocs de code multilignes. Ceux-ci sont pris en charge nativement par Material for MkDocs avec des fonctionnalit\u00e9s avanc\u00e9es (num\u00e9rotation, copier-coller, surbrillance syntaxique, etc.) Ce sujet est trait\u00e9 dans la section d\u00e9di\u00e9e.</p>"},{"location":"meta/structure/#material-for-mkdocs","title":"Material for MkDocs","text":"<p>En plus du Markdown standard, Material for MkDocs prend en charge de nombreuses extensions Markdown enrichies via <code>pymdown-extensions</code>, une suite puissante d\u2019outils d\u00e9velopp\u00e9e pour am\u00e9liorer la lisibilit\u00e9, la structuration et l\u2019interactivit\u00e9 de votre documentation.</p> <p>Ces fonctionnalit\u00e9s sont nativement int\u00e9gr\u00e9es ou facilement activables via le fichier <code>mkdocs.yml</code>, sous <code>markdown_extensions:</code>.</p> <p>Cette section vous pr\u00e9sente les principales extensions utiles pour rendre votre documentation plus claire, plus lisible et plus professionnelle.</p>"},{"location":"meta/structure/#blocs-de-code","title":"Blocs de code","text":"<p>Material for MkDocs prend en charge des blocs de code interactifs et stylis\u00e9s avec de nombreuses options.</p> <ul> <li>Mise en surbrillance automatique (selon le langage)</li> <li>Num\u00e9rotation des lignes</li> <li>Bouton \u201cCopier\u201d dans le coin du bloc</li> </ul> <p>Pour activer ces options, modifiez/ajoutez ces \u00e9l\u00e9ments dans votre fichier <code>mkdocs.yml</code> :</p> mkdocs.yml<pre><code>features:\n    - content.code.copy\n\nmarkdown_extensions:\n  - pymdownx.highlight:\n      anchor_linenums: true\n      line_spans: __span\n      pygments_lang_class: true\n  - pymdownx.inlinehilite\n  - pymdownx.snippets\n  - pymdownx.superfences\n</code></pre> <p>La syntaxe de base est identique au Markdown standard : utilisez trois accents graves (<code>```</code>), pour ouvrir et fermer le bloc, et ajoutez \u00e9ventuellement le nom du langage pour activer la coloration syntaxique.</p> <pre><code>```py\nnum = int(input(\"Enter a number: \"))\nif (num % 2) == 0:\n   print(\"{0} is Even\".format(num))\nelse:\n   print(\"{0} is Odd\".format(num))\n```\n</code></pre> <pre><code>num = int(input(\"Enter a number: \"))\nif (num % 2) == 0:\n   print(\"{0} is Even\".format(num))\nelse:\n   print(\"{0} is Odd\".format(num))\n</code></pre> <p>Affichez un bandeau au-dessus du bloc avec le titre <code>title=\"...\"</code>.</p> <pre><code>```py title=\"odd_or_even.py\"\nnum = int(input(\"Enter a number: \"))\nif (num % 2) == 0:\n   print(\"{0} is Even\".format(num))\nelse:\n   print(\"{0} is Odd\".format(num))\n```\n</code></pre> odd_or_even.py<pre><code>num = int(input(\"Enter a number: \"))\nif (num % 2) == 0:\n   print(\"{0} is Even\".format(num))\nelse:\n   print(\"{0} is Odd\".format(num))\n</code></pre> <p>De la m\u00eame fa\u00e7on, ajoutez <code>linenums=\"...\"</code> \u00e0 la suite pour activer la num\u00e9rotation des lignes et <code>hl_lines=\"...\"</code> pour mettre en \u00e9vidence une ou plusieurs lignes :</p> <pre><code>```py title=\"odd_or_even.py\" linenums=\"1\" hl_lines=\"2-3\"\nnum = int(input(\"Enter a number: \"))\nif (num % 2) == 0:\n   print(\"{0} is Even\".format(num))\nelse:\n   print(\"{0} is Odd\".format(num))\n```\n</code></pre> odd_or_even.py<pre><code>num = int(input(\"Enter a number: \"))\nif (num % 2) == 0:\n   print(\"{0} is Even\".format(num))\nelse:\n   print(\"{0} is Odd\".format(num))\n</code></pre> <p>Vous pouvez aussi sp\u00e9cifier plusieurs lignes ou plages :</p> <pre><code>```py hl_lines=\"2 4 6-8\"\n</code></pre>"},{"location":"meta/structure/#encadres","title":"Encadr\u00e9s","text":"<p>Les encadr\u00e9s peuvent mettre en valeur une remarque, un avertissement, un exemple ou une information importante.</p> <p>Pour les activer, modifiez/ajoutez ces \u00e9l\u00e9ments dans votre fichier <code>mkdocs.yml</code> :</p> mkdocs.yml<pre><code>markdown_extensions:\n  - admonition\n  - pymdownx.details\n  - pymdownx.superfences\n</code></pre> <p>Les encadr\u00e9s commencent par <code>!!!</code>, suivi d'un mot cl\u00e9 qui d\u00e9termine le type. Il est \u00e9galement possible de les rendre d\u00e9pliables/repliables, avec <code>???</code> (repli\u00e9) ou <code>???+</code> (d\u00e9pli\u00e9). Par d\u00e9faut, le titre est determin\u00e9 par le type, mais vous pouvez le d\u00e9finir avec des guillemets.</p> <pre><code>!!! info\n    Ce wiki utilise Material for MkDocs.\n\n??? warning \"Attention\"\n    Attention \u00e0 la casse dans vos noms de fichiers.\n</code></pre> <p>Info</p> <p>Ce wiki utilise Material for MkDocs.</p> Attention <p>Attention \u00e0 la casse dans vos noms de fichiers.</p> <p>Il est \u00e9galement possible d'ajouter un encadr\u00e9 sur le c\u00f4t\u00e9 avec <code>inline</code> ou <code>inline end</code>.</p> <p>Exemple</p> <p>Ce type d'encadr\u00e9 prend moins de place verticalement.</p> <pre><code>!!! example inline end \"Exemple\"\n    Cet encadr\u00e9 prend moins de place verticalement.\n</code></pre> <p>Types disponibles : <code>note</code>, <code>tip</code>, <code>quote</code>, <code>warning</code>, <code>danger</code>, <code>bug</code>, etc. Voir tous les types et styles.</p>"},{"location":"meta/structure/#onglets-de-contenu","title":"Onglets de contenu","text":"<p>Organisez plusieurs variantes d\u2019un m\u00eame contenu dans des onglets :</p> <pre><code>=== \"Windows\"\n    Instructions pour Windows...\n\n=== \"macOS\"\n    Instructions pour macOS...\n</code></pre> WindowsmacOS <p>Instructions pour Windows...</p> <p>Instructions pour macOS...</p>"},{"location":"meta/theme/","title":"Personnalisation visuelle","text":"<p>Cette section pr\u00e9sente diff\u00e9rentes fa\u00e7ons de personnaliser l\u2019apparence et le comportement de votre site MkDocs, en s\u2019appuyant sur les nombreuses fonctionnalit\u00e9s offertes par Material for MkDocs.</p>"},{"location":"meta/theme/#changer-lapparence-du-site","title":"Changer l'apparence du site","text":"<p>Material for MkDocs permet de d\u00e9finir des jeux de couleurs personnalis\u00e9s et de proposer un bouton permettant aux utilisateurs de passer du mode clair au mode sombre.</p>"},{"location":"meta/theme/#selectionner-le-theme","title":"S\u00e9lectionner le th\u00e8me","text":"<p>Material for MkDocs dispose de deux th\u00e8mes: un mode clair <code>default</code> et un mode sombre <code>slate</code>.</p> <p>Dans le fichier <code>mkdocs.yml</code>, ajoutez ou modifiez la section <code>theme:</code> comme suit :</p> <pre><code>theme:\n  name: material\n  palette:\n    scheme: slate\n</code></pre>"},{"location":"meta/theme/#definir-les-couleurs","title":"D\u00e9finir les couleurs","text":"<p>Les couleurs principales du th\u00e8me sont d\u00e9finies par <code>primary</code> et <code>accent</code>.</p> <p><code>primary</code> d\u00e9finit la couleur dominante du th\u00e8me. Elle est utilis\u00e9e notamment pour la barre de navigation sup\u00e9rieure, les liens actifs et certains boutons ou composants interactifs.</p> <pre><code>theme:\n  name: material\n  palette:\n    primary: deep purple\n</code></pre> <p><code>accent</code> d\u00e9finit la couleur secondaire. Elle est utilis\u00e9e pour attirer l\u2019attention sur certains \u00e9l\u00e9ments, comme les liens survol\u00e9s, les ic\u00f4nes s\u00e9lectionn\u00e9es et certains effets visuels (surbrillance, indicateurs de s\u00e9lection, etc.).</p> <pre><code>theme:\n  name: material\n  palette:\n    accent: pink\n</code></pre> <p>Vous pouvez choisir parmi une s\u00e9rie de couleurs pr\u00e9d\u00e9finies propos\u00e9es par le th\u00e8me, comme <code>blue</code>, <code>cyan</code>, <code>green</code>, <code>teal</code>, <code>deep orange</code>, etc. Consultez la liste compl\u00e8te ici.</p> <p>Il est \u00e9galement possible d\u2019utiliser des couleurs personnalis\u00e9es, en d\u00e9finissant votre propre palette (par code hexad\u00e9cimal ou variable CSS). Voir la documentation officielle.</p>"},{"location":"meta/theme/#activer-le-mode-clair-sombre","title":"Activer le mode clair / sombre","text":"<p>Proposer une palette de couleurs claire et sombre rend la documentation plus agr\u00e9able \u00e0 lire \u00e0 tout moment de la journ\u00e9e, en laissant \u00e0 l\u2019utilisateur le choix du mode qui lui convient le mieux.</p> <p>La configuration suivante ajoutera un bouton de bascule \u00e0 gauche de la barre de recherche pour passer d\u2019un th\u00e8me \u00e0 l\u2019autre.</p> <p>Personnalisez les modes clair / sombre</p> <p>Vous pouvez \u00e9galement d\u00e9finir des couleurs diff\u00e9rentes pour <code>primary</code> et <code>accent</code> selon la palette utilis\u00e9e (claire ou sombre).</p> <pre><code>theme:\n  name: material\n\n  palette:\n    - scheme: slate\n      toggle:\n        icon: material/weather-sunny\n        name: Passer en mode clair\n\n    - scheme: default\n      toggle:\n        icon: material/weather-night\n        name: Passer en mode sombre\n</code></pre> <p>Le bouton utilise des ic\u00f4nes Material Design, que vous pouvez personnaliser avec la propri\u00e9t\u00e9 <code>toggle:icon</code>.</p> <p>Par d\u00e9faut, on utilise :</p> <ul> <li><code>material/weather-night</code>  pour indiquer le passage en mode sombre ;</li> <li><code>material/weather-sunny</code>  pour revenir au mode clair.</li> </ul> <p>Vous pouvez remplacer ces ic\u00f4nes par n\u2019importe quelle autre issue de la biblioth\u00e8que Material Design Icons. Voir la liste compl\u00e8te des ic\u00f4nes disponibles ici.</p>"},{"location":"meta/theme/#changer-la-police-decriture","title":"Changer la police d'\u00e9criture","text":"<p>Material for MkDocs facilite le changement des polices du site, gr\u00e2ce \u00e0 une int\u00e9gration directe avec Google Fonts. Vous pouvez personnaliser \u00e0 la fois la police r\u00e9guli\u00e8re (texte courant) et la police \u00e0 chasse fixe (pour les blocs de code) ou m\u00eame charger des polices personnalis\u00e9es si besoin.</p> <pre><code>theme:\n  name: material\n  font:\n    text: Roboto\n    code: Roboto Mono\n</code></pre>"},{"location":"meta/theme/#utiliser-des-icones-et-emojis","title":"Utiliser des ic\u00f4nes et emojis","text":"<p>Material for MkDocs permet d\u2019int\u00e9grer facilement des ic\u00f4nes et emojis directement dans le contenu de vos pages Markdown, gr\u00e2ce \u00e0 l\u2019extension <code>pymdownx.emoji</code>. Pour cela, ajoutez la configuration suivante dans la section <code>markdown_extensions</code> de votre fichier <code>mkdocs.yml</code> :</p> <pre><code>markdown_extensions:\n  - attr_list\n  - pymdownx.emoji:\n      emoji_index: !!python/name:material.extensions.emoji.twemoji\n      emoji_generator: !!python/name:material.extensions.emoji.to_svg\n</code></pre> <p>Cette configuration permet d\u2019utiliser des emojis dans vos textes et ils seront rendus comme des ic\u00f4nes vectorielles stylis\u00e9es, compatibles avec le th\u00e8me et adaptables au mode clair/sombre. Voir la liste compl\u00e8te des ic\u00f4nes et emojis disponibles ici.</p> <p>\"L'\u00e9diteur me signale une erreur de syntaxe!\"</p> <p>C'est normal. La syntaxe <code>!!python/name:...</code> n'est pas standard YAML et n\u2019est comprise que par PyYAML (le parseur utilis\u00e9 par MkDocs). Vous pouvez ignorer cette erreur.</p>"},{"location":"meta/theme/#protection-des-donnees","title":"Protection des donn\u00e9es","text":"<p>L'utilisation de Google Fonts implique que le navigateur de l\u2019utilisateur envoie une requ\u00eate \u00e0 un serveur Google pour charger les polices. Cette pratique peut poser probl\u00e8me du point de vue de la protection des donn\u00e9es personnelles.</p> <p>En Europe, le R\u00e8glement g\u00e9n\u00e9ral sur la protection des donn\u00e9es (RGPD) stipule que l\u2019adresse IP d\u2019un utilisateur est consid\u00e9r\u00e9e comme une donn\u00e9e personnelle. Or, le chargement de Google Fonts depuis un serveur tiers (comme Google) transmet cette IP sans consentement explicite, ce qui peut contrevenir \u00e0 la l\u00e9gislation, notamment apr\u00e8s plusieurs d\u00e9cisions judiciaires en Allemagne et en Autriche.</p> <p>En Suisse, la Loi f\u00e9d\u00e9rale sur la protection des donn\u00e9es (nLPD) entr\u00e9e en vigueur en 2023 est inspir\u00e9e du RGPD et adopte une d\u00e9finition large des donn\u00e9es personnelles, incluant \u00e9galement les adresses IP.</p> <p>Vous pouvez d\u00e9sactiver compl\u00e8tement le chargement externe en ajoutant ceci dans <code>mkdocs.yml</code> :</p> <pre><code>theme:\n  name: material\n  font: false\n</code></pre> <p>Cela forcera l\u2019utilisation des polices syst\u00e8me locales. Vous pouvez t\u00e9l\u00e9charger les fichiers depuis Google Fonts et les h\u00e9berger dans le dossier <code>docs/</code> ou un sous-dossier (ex. <code>docs/assets/</code>), puis les int\u00e9grer via CSS (voir section pr\u00e9c\u00e9dente).</p> <p>Plugin int\u00e9gr\u00e9</p> <p>Material for MkDocs propose un plugin int\u00e9gr\u00e9 pour renforcer la confidentialit\u00e9. Il d\u00e9sactive automatiquement les appels externes (Google Fonts, scripts, etc.) : <pre><code>  plugins:\n    - privacy\n</code></pre></p> <p>Une autre possibilit\u00e9 est d\u2019ajouter un formulaire de consentement aux cookies (banni\u00e8re ou popup) afin de respecter la l\u00e9gislation sur la protection des donn\u00e9es :</p> <pre><code>extra:\n  consent:\n    title: Accepter les cookies\n    description: &gt;- \n      Ce site utilise des cookies ou des services externes\n      susceptibles de collecter des donn\u00e9es personnelles.\n</code></pre>"},{"location":"meta/theme/#personnaliser-le-logo-et-les-icones","title":"Personnaliser le logo et les ic\u00f4nes","text":"<p>Material for MkDocs permet de personnaliser l\u2019identit\u00e9 visuelle de votre site en ajoutant un logo, une favicon (ic\u00f4ne affich\u00e9e dans l\u2019onglet du navigateur), et m\u00eame des ic\u00f4nes personnalis\u00e9es dans le menu de navigation ou les liens sociaux.</p> <p>Pour ajouter un logo et une favicon, placez vos fichiers image (de pr\u00e9f\u00e9rence au format .png ou .svg) dans le dossier <code>docs/</code> ou un sous-dossier (ex. <code>docs/assets/</code>), puis indiquez leur chemin relatif dans <code>mkdocs.yml</code> :</p> <pre><code>theme:\n  name: material\n  logo: assets/images/logo.svg\n  favicon: assets/images/favicon.png\n</code></pre>"},{"location":"meta/theme/#personnalisation-de-la-navigation","title":"Personnalisation de la navigation","text":"<p>Material for MkDocs permet d\u2019ajouter des fonctions avanc\u00e9es de navigation gr\u00e2ce \u00e0 l\u2019option <code>features:</code> dans le fichier <code>mkdocs.yml</code>. Voici trois options particuli\u00e8rement utiles pour am\u00e9liorer la structure et l\u2019ergonomie du site.</p>"},{"location":"meta/theme/#organisation-de-la-navigation","title":"Organisation de la navigation","text":"<p>La cl\u00e9 <code>nav:</code> dans mkdocs.yml permet de d\u00e9finir l'ordre, la structure et les titres des pages dans la barre lat\u00e9rale (ou dans les onglets si <code>navigation.tabs</code> est activ\u00e9).</p> <p>Sans cette section, MkDocs g\u00e9n\u00e8re automatiquement la navigation en fonction des fichiers pr\u00e9sents dans le dossier <code>docs/</code>, mais cela donne souvent une structure d\u00e9sordonn\u00e9e, surtout pour des projets complexes ou multilingues.</p> <p>Ainsi, vous pourrez choisir l'ordre d'affichage des pages ou en omettre, les renommer sans modifier le titre r\u00e9el du fichier <code>.md</code> et cr\u00e9er des sous-menus dans l'arborescence.</p> <pre><code>nav:\n  - Accueil: index.md\n  - \u00c0 propos:\n      - Pr\u00e9sentation: about/overview.md\n      - Installation: about/installation.md\n</code></pre>"},{"location":"meta/theme/#onglets-de-navigation","title":"Onglets de navigation","text":"<p>L'option <code>navigation.tabs</code> active l'affichage de la navigation principale sous forme d'onglets en haut de la page. Chaque \u00e9l\u00e9ment de premier niveau dans <code>nav:</code> devient un onglet horizontal.</p> <pre><code>theme:\n  name: material\n\n  features:\n    - navigation.tabs\n</code></pre>"},{"location":"meta/theme/#sections","title":"Sections","text":"<p>L'option <code>navigation.sections</code> fonctionne en compl\u00e9ment de <code>navigation.tabs</code>. Elle permet d\u2019afficher les titres de sections dans le menu lat\u00e9ral gauche, en les groupant visuellement.</p> <pre><code>theme:\n  name: material\n\n  features:\n    - navigation.tabs\n    - navigation.sections\n</code></pre>"},{"location":"meta/theme/#pied-de-page","title":"Pied de page","text":"<p>L\u2019option <code>navigation.footer</code> permet d\u2019afficher :</p> <ul> <li>Un pied de page de navigation avec des boutons Page pr\u00e9c\u00e9dente et Page suivante</li> <li>Un pied de page personnalis\u00e9, contenant des liens, ic\u00f4nes et du texte (notamment les cr\u00e9dits ou les mentions l\u00e9gales)</li> </ul> <pre><code>theme:\n  name: material\n\n  features:\n    - navigation.footer\n\nextra:\n  social:\n    - icon: material/github\n      link: https://github.com/mon-projet\n    - icon: material/web\n      link: https://exemple.com\n\ncopyright: Copyright &amp;copy; 2025 Mon Organisation\n</code></pre>"},{"location":"meta/theme/#exemple-de-configuration","title":"Exemple de configuration","text":"mkdocs.yml<pre><code>theme:\n  name: material\n\n  font:\n    text: Source Sans 3\n    code: Source Code Pro\n\n  logo: assets/images/logo.svg\n  favicon: assets/images/favicon.png\n\n  features:\n    - navigation.footer\n    - navigation.tabs\n    - navigation.sections\n\n  palette:\n    # Mode sombre\n    - scheme: slate\n      toggle:\n        icon: material/weather-sunny\n        name: Passer en mode clair\n      primary: indigo\n      accent: red\n\n    # Mode clair\n    - scheme: default\n      toggle:\n        icon: material/weather-night\n        name: Passer en mode sombre\n      primary: blue\n      accent: red\n\nnav:\n  - Accueil: index.md\n  - \u00c0 propos:\n      - Pr\u00e9sentation: about/overview.md\n      - Installation: about/installation.md\n\nplugins:\n  - privacy\n\nextra:\n  social:\n    - icon: material/github\n      link: https://github.com/mon-projet\n    - icon: material/web\n      link: https://exemple.com\n\ncopyright: Copyright &amp;copy; 2025 Mon Organisation\n\nmarkdown_extensions:\n  - attr_list\n  - pymdownx.emoji:\n      emoji_index: !!python/name:material.extensions.emoji.twemoji\n      emoji_generator: !!python/name:material.extensions.emoji.to_svg\n</code></pre>"},{"location":"resources/git/gitignore/","title":"Exclusion de fichiers dans un d\u00e9p\u00f4t MkDocs","text":"<p> Muong, Kethsana  Ao\u00fbt 2025  Archives de la construction moderne \u2013 EPFL</p> <p>Ce fichier est distribu\u00e9 sous la licence GNU General Public License v3. Vous pouvez le redistribuer et/ou le modifier selon les termes de la GNU GPL tels que publi\u00e9s par la Free Software Foundation, soit la version 3 de la licence, soit (\u00e0 votre choix) toute version ult\u00e9rieure. Ce fichier <code>.gitignore</code> est propos\u00e9 \u00e0 titre d\u2019exemple pour des projets utilisant MkDocs avec le th\u00e8me Material for MkDocs. Il contient une liste de r\u00e9pertoires, fichiers temporaires et artefacts courants \u00e0 exclure du suivi Git lors du d\u00e9veloppement ou du d\u00e9ploiement d\u2019un site statique. Pour obtenir une copie de la GNU General Public License, consultez www.gnu.org/licenses/.</p>"},{"location":"resources/git/gitignore/#objectif","title":"Objectif","text":"<p>Le fichier <code>.gitignore</code> permet d\u2019indiquer \u00e0 Git quels fichiers ou dossiers ne doivent pas \u00eatre suivis ni enregistr\u00e9s dans l\u2019historique du d\u00e9p\u00f4t. C\u2019est un outil essentiel pour \u00e9viter d\u2019ajouter accidentellement :</p> <ul> <li>des fichiers volumineux ou g\u00e9n\u00e9r\u00e9s automatiquement (ex: <code>/site/</code>)</li> <li>des fichiers temporaires ou de cache (ex: <code>__pycache__/</code>, <code>.DS_Store</code>)</li> <li>des fichiers contenant des informations sensibles (ex: <code>.env</code>)</li> </ul> <p>Rappel</p> <p>Le fichier <code>.gitignore</code> emp\u00eache Git de suivre de nouveaux fichiers correspondants, mais n'a aucun effet sur les fichiers d\u00e9j\u00e0 suivis. Si vous ajoutez une r\u00e8gle apr\u00e8s coup, vous devrez supprimer ces fichiers de l\u2019index avec : <pre><code>git rm -r --cached .\ngit add .\ngit commit -m \"Nettoyage des fichiers ignor\u00e9s\"\n</code></pre></p>"},{"location":"resources/git/gitignore/#fichier-gitignore","title":"Fichier <code>.gitignore</code>","text":"<pre><code># =========================\n# MkDocs et d\u00e9ploiement\n# =========================\n\n# Dossier g\u00e9n\u00e9r\u00e9 automatiquement par MkDocs (site statique)\nsite/\n\n# Cache g\u00e9n\u00e9r\u00e9 par des plugins comme `privacy`\n.cache/\n\n# =========================\n# Environnement Python\n# =========================\n\n# Environnements virtuels\n.env\n.venv\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\n\n# Cache Python\n__pycache__/\n*.py[cod]\n*.pyo\n*.pyd\n*.pyc\n\n# Fichiers de log ou d\u2019erreur pip\npip-log.txt\npip-delete-this-directory.txt\n\n# =========================\n# Packaging &amp; distribution\n# =========================\n\n.Python\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\npip-wheel-metadata/\nshare/python-wheels/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\n\n# =========================\n# IDEs / \u00c9diteurs\n# =========================\n\n# Visual Studio Code / VSCodium\n.vscode/\n.history/\n\n# Fichiers de sauvegarde ou temporaires d\u2019\u00e9diteurs\n*~\n*.swp\n*.bak\n*.tmp\n\n# =========================\n# Syst\u00e8me / fichiers inutiles\n# =========================\n\n# macOS\n.DS_Store\n\n# Fichiers log g\u00e9n\u00e9riques\n*.log\n</code></pre>"},{"location":"resources/scripts/AtoM-METS-merger/","title":"Int\u00e9gration des m\u00e9tadonn\u00e9es d'Archivematica \u00e0 AtoM","text":"<p> Seibt, Yonathan J\u00e9r\u00f4me  D\u00e9cembre 2024  Archives de la construction moderne \u2013 EPFL</p> <p>Ce package est distribu\u00e9 sous la licence GNU General Public License v3. Vous pouvez le redistribuer et/ou le modifier selon les termes de la GNU GPL tels que publi\u00e9s par la Free Software Foundation, soit la version 3 de la licence, soit (\u00e0 votre choix) toute version ult\u00e9rieure. Ce programme est distribu\u00e9 dans l\u2019espoir qu\u2019il sera utile, mais SANS AUCUNE GARANTIE\u202f; sans m\u00eame la garantie implicite de QUALIT\u00c9 MARCHANDE ou D\u2019AD\u00c9QUATION \u00c0 UN USAGE PARTICULIER. Voir la GNU General Public License pour plus de d\u00e9tails. Pour obtenir une copie de la GNU General Public License, consultez www.gnu.org/licenses/.</p>"},{"location":"resources/scripts/AtoM-METS-merger/#objectif","title":"Objectif","text":"<p>Ce package automatise l\u2019int\u00e9gration des m\u00e9tadonn\u00e9es g\u00e9n\u00e9r\u00e9es par Archivematica (1.17.0) dans AtoM (2.8.2), en garantissant une synchronisation fluide et des mises \u00e0 jour coh\u00e9rentes entre les deux syst\u00e8mes. Il fournit un flux de travail structur\u00e9 pour\u202f:</p> <ol> <li>Extraction et transformation des donn\u00e9es : fusion des m\u00e9tadonn\u00e9es des fichiers METS (XML) g\u00e9n\u00e9r\u00e9s par Archivematica avec les notices export\u00e9es d\u2019AtoM (CSV).</li> <li>Mise \u00e0 jour automatis\u00e9e des notices dans AtoM : injection des m\u00e9tadonn\u00e9es enrichies via des requ\u00eates HTTP.</li> </ol>"},{"location":"resources/scripts/AtoM-METS-merger/#contenu","title":"Contenu","text":"<p>Scripts Python</p> <ul> <li><code>AtoM_METS_Data_Merger.py</code> : analyse et fusionne les m\u00e9tadonn\u00e9es provenant de METS (Archivematica) et CSV (AtoM).</li> <li><code>AtoM_Record_Updater.py</code> : met \u00e0 jour les notices dans AtoM avec les m\u00e9tadonn\u00e9es enrichies via l\u2019interface web.</li> </ul> <p>Fichiers de donn\u00e9es</p> <ul> <li><code>isad_0000000001.csv</code> : fichier d\u2019export AtoM contenant les notices existantes.</li> <li><code>METS_123456789.xml</code> : fichier METS produit par Archivematica contenant les m\u00e9tadonn\u00e9es structur\u00e9es.</li> <li><code>login.csv</code> : identifiants n\u00e9cessaires pour acc\u00e9der \u00e0 l\u2019interface web d\u2019AtoM.</li> <li><code>urls.csv</code> : liste des URLs ou des UUID n\u00e9cessaires pour localiser ou synchroniser les donn\u00e9es.</li> </ul>"},{"location":"resources/scripts/AtoM-METS-merger/#prerequis-techniques","title":"Pr\u00e9requis techniques","text":"<ul> <li> <p>Syst\u00e8mes requis</p> <ul> <li>Archivematica 1.17.0, pour produire des fichiers METS.</li> <li>AtoM 2.8.2</li> </ul> </li> <li> <p>Environnement Python 3.8+ avec les biblioth\u00e8ques suivantes</p> <ul> <li>pandas : manipulation des fichiers CSV.</li> <li>xml.etree.ElementTree : analyse des fichiers XML.</li> <li>requests : gestion des requ\u00eates HTTP.</li> <li>BeautifulSoup (bs4) : navigation et interaction avec les formulaires web.</li> </ul> </li> </ul>"},{"location":"resources/scripts/AtoM-METS-merger/#pourquoi-ce-script-est-necessaire","title":"Pourquoi ce script est n\u00e9cessaire ?","text":"<p>Lorsqu'un DIP g\u00e9n\u00e9r\u00e9 par Archivematica est pouss\u00e9 vers AtoM, la structure hi\u00e9rarchique des dossiers dispara\u00eet. Tous les fichiers se retrouvent regroup\u00e9s sans distinction de leur organisation d'origine. Cette limitation est document\u00e9e dans les communaut\u00e9s Archivematica/AtoM.</p> <p>Ce script permet de recr\u00e9er une correspondance logique entre :</p> <ul> <li>Les notices AtoM existantes (export\u00e9es via le Clipboard en CSV)</li> <li>Les fichiers du DIP (et leurs m\u00e9tadonn\u00e9es, extraites du fichier METS)</li> </ul> <p>Le fichier r\u00e9sultant <code>urls.csv</code> peut \u00eatre utilis\u00e9 par un second script pour injecter automatiquement les m\u00e9tadonn\u00e9es enrichies dans AtoM.</p>"},{"location":"resources/scripts/AtoM-METS-merger/#etapes-dutilisation","title":"\u00c9tapes d'utilisation","text":""},{"location":"resources/scripts/AtoM-METS-merger/#verifiez-le-nom-du-fichier-mets","title":"V\u00e9rifiez le nom du fichier METS","text":"<p>Ouvrez le script et v\u00e9rifiez que la variable contenant le nom du fichier METS correspond bien \u00e0 votre fichier. Par d\u00e9faut, cela pourrait ressembler \u00e0 :</p> <pre><code>mets_filename = \"METS_123456789.xml\"\n</code></pre> <p>Modifiez cette valeur si n\u00e9cessaire.</p>"},{"location":"resources/scripts/AtoM-METS-merger/#placez-vous-dans-le-bon-dossier","title":"Placez-vous dans le bon dossier","text":"<p>Ouvrez l'invite de commande et placez-vous dans le bon dossier.</p> <pre><code>cd \"C:\\Users\\votre.nom\\Chemin\\Vers\\Le\\Dossier\"\n</code></pre> <p>Ce dossier doit contenir :</p> <ul> <li>Le fichier METS</li> <li>Le fichier CSV AtoM</li> <li>Le script Python</li> </ul>"},{"location":"resources/scripts/AtoM-METS-merger/#executez-le-script","title":"Ex\u00e9cutez le script","text":"<pre><code>python AtoM_METS_Data_Merger.py\n</code></pre> <p>Si tout s\u2019est bien pass\u00e9, le message suivant s'affiche :</p> <pre><code>Le fichier 'urls.csv' a \u00e9t\u00e9 cr\u00e9\u00e9 avec succ\u00e8s.\n</code></pre>"},{"location":"resources/scripts/AtoM-METS-merger/#resultat-attendu","title":"R\u00e9sultat attendu","text":"<p>Colonnes incluses dans <code>urls.csv</code> :</p> Colonne Description <code>urls</code> Deux liens vers chaque notice AtoM (version FR et EN), utilis\u00e9s pour appliquer les modifications. <code>titre</code> Titre reconstruit \u00e0 partir du nom du fichier. <code>editEvents_0_type</code> Type d\u2019\u00e9v\u00e9nement \u00e0 enregistrer, ex : <code>\"creation\"</code>. <code>dateCreation</code> Date de cr\u00e9ation du fichier, extraite du METS. <code>levelOfDescription</code> Niveau de description ISAD-G, ex : <code>\"item\"</code>. <code>locationOfOriginals</code> Chemin d\u2019acc\u00e8s original au fichier dans le DIP. <code>extentAndMedium</code> Type et taille du fichier (ex. : PDF, 512 Ko). <code>identifier</code> Cote ISAD-G g\u00e9n\u00e9r\u00e9e pour le fichier."},{"location":"resources/scripts/AtoM-METS-merger/#etapes-suivantes","title":"\u00c9tapes suivantes","text":"<p>Vous pouvez maintenant utiliser le fichier urls.csv avec le script <code>AtoM_Record_Updater</code> pour injecter automatiquement les m\u00e9tadonn\u00e9es dans les notices AtoM via leur interface web.</p>"},{"location":"resources/scripts/AtoM-METS-merger/#script-atom_mets_data_mergerpy","title":"Script <code>AtoM_METS_Data_Merger.py</code>","text":"<pre><code># Script: AtoM_METS_Data_Merger.py\n# Description: This script extracts and merges metadata from AtoM (CSV) and METS (XML) files. It standardizes, parses, and combines data\n# into a unified, enriched CSV file ready for further processing or import into AtoM.\n#\n# Author: Yonathan Seibt, Archives de la construction moderne \u2013 EPFL\n# Date: November 2024\n#\n# License: This script is distributed under the GNU General Public License v3. You may redistribute and/or modify it under the terms \n#          of the GNU GPL as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n#\n#          This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty \n#          of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n#\n#          You should have received a copy of the GNU General Public License along with this program. If not, see &lt;https://www.gnu.org/licenses/&gt;.\n\nimport pandas as pd\nimport re\nimport xml.etree.ElementTree as ET\nfrom datetime import datetime\n\n# ---- Partie 1 : Extraire les UUID du fichier CSV ----\n\n# Lire le fichier CSV\ndf_csv = pd.read_csv('isad_0000000001.csv')  # Remplacez par le nom de votre fichier CSV\n\n# Ajouter une colonne d'index pour conserver l'ordre\ndf_csv['index'] = df_csv.index\n\n# Fonction pour extraire l'UUID\ndef extract_uuid(url):\n    if isinstance(url, str):\n        match = re.search(r'/([0-9a-fA-F-]{36})-', url)\n        if match:\n            return match.group(1)\n    return None\n\n# Appliquer la fonction \u00e0 la colonne contenant les URLs\ndf_csv['UUID'] = df_csv['digitalObjectURI'].apply(extract_uuid)  # Remplacez par le nom de votre colonne\n\n# ---- Partie 2 : Extraire les donn\u00e9es du fichier XML ----\n\n# Charger le fichier XML\nxml_file = 'METS.07fdd110-6ae2-49c4-989d-6394c152be9c.xml'\ntree = ET.parse(xml_file)\nroot = tree.getroot()\n\n# D\u00e9finir l'espace de noms utilis\u00e9 dans le fichier XML\nns = {'mets': 'http://www.loc.gov/METS/'}\n\n# Fonction pour extraire toutes les donn\u00e9es des balises &lt;mets:amdSec&gt; et les structurer\ndef extract_all_amdSec_data(root, ns):\n    amdSec_data = []\n\n    # Trouver toutes les balises &lt;mets:amdSec&gt;\n    for amdSec in root.findall('.//mets:amdSec', ns):\n        data = {}\n\n        # Extraire l'attribut 'ID' de la balise &lt;mets:amdSec&gt;\n        data['ID'] = amdSec.attrib.get('ID', None)\n\n        # Extraire toutes les sous-balises pertinentes\n        for element in amdSec.iter():\n            # Si l'\u00e9l\u00e9ment est une balise avec un texte (et non l'attribut)\n            if element.tag != '{http://www.loc.gov/METS/}amdSec' and element.text:\n                # Enlever l'espace de noms de la balise\n                tag = element.tag.split('}')[1] if '}' in element.tag else element.tag\n                data[tag] = element.text.strip()\n\n        # Ajouter les donn\u00e9es extraites \u00e0 la liste\n        amdSec_data.append(data)\n\n    return amdSec_data\n\n# Extraire toutes les donn\u00e9es des balises &lt;mets:amdSec&gt;\namdSec_data = extract_all_amdSec_data(root, ns)\n\n# Cr\u00e9er un DataFrame avec les donn\u00e9es extraites\ndf_xml = pd.DataFrame(amdSec_data)\n\n# Filtrer les colonnes non pertinentes\ncolumns_to_keep = [\n    'ID', 'objectIdentifierValue', 'size', 'messageDigestAlgorithm', 'messageDigest', 'formatName', 'formatVersion', \n    'formatRegistryKey', 'dateCreatedByApplication', 'created', \n    'creatingApplicationName', 'FileName', 'FileType', 'FileTypeExtension', 'MIMEType', 'originalName'\n]\n\n# Garder uniquement les colonnes pertinentes\ndf_filtered = df_xml[columns_to_keep]\n\n# ---- Partie 3 : Fusionner les donn\u00e9es des deux DataFrames ----\n\n# Fusionner les deux DataFrames sur les colonnes correspondantes\n# Ici, on suppose que les noms des colonnes \u00e0 fusionner sont respectivement 'objectIdentifierValue' et 'UUID'\ndf_merged = pd.merge(df_filtered, df_csv, left_on='objectIdentifierValue', right_on='UUID', how='inner')\n\n# R\u00e9ordonner le DataFrame fusionn\u00e9 selon l'index original\ndf_merged = df_merged.sort_values(by='index')\n\n# ---- Partie 4 : Transformation et duplication des donn\u00e9es ----\n\n# Initialiser les nouvelles colonnes\ndf_merged['urls'] = 'https://morphe-test.epfl.ch/index.php/' + df_merged['slug'] + '/edit'\ndf_merged['titre'] = df_merged['title'] + ' (fichier num\u00e9rique)'\ndf_merged['editEvents_0_type'] = 'creation'\n\n# Corriger le format de date\ndef format_date(date_str):\n    try:\n        return datetime.strptime(date_str, '%Y-%m-%dT%H:%M:%SZ').strftime('%Y-%m-%d')\n    except ValueError:\n        return ''\n\ndf_merged['dateCreation'] = df_merged['dateCreatedByApplication'].apply(format_date)\ndf_merged['levelOfDescription'] = 'item'\ndf_merged['scopeAndContent'] = 'Chemin d\u2019acc\u00e8s du fichier sur le support original : ' + df_merged['originalName'].str.replace('%transferDirectory%objects/', '')\ndf_merged['extentAndMedium'] = '1 fichier num\u00e9rique ' + df_merged['formatName'] + ' de ' + df_merged['size'] + ' octets'\ndf_merged['identifier'] = ['0219.01.0130/04.01.01.' + str(i+1).zfill(2) for i in range(len(df_merged))]\n\n# Dupliquer chaque enregistrement avec modification de la colonne urls\ndf_duplicated = df_merged.copy()\ndf_duplicated['urls'] = 'https://morphe-test.epfl.ch/index.php/' + df_duplicated['slug'] + '/edit?sf_culture=fr&amp;template=isad'\n\n# Combiner les DataFrames\ndf_final = pd.concat([df_merged, df_duplicated], ignore_index=True)\n\n# R\u00e9ordonner le DataFrame final selon l'index original\ndf_final = df_final.sort_values(by='index')\n\n# S\u00e9lectionner les colonnes n\u00e9cessaires\ncolumns_to_keep = ['urls', 'titre', 'editEvents_0_type', 'dateCreation', 'levelOfDescription', 'scopeAndContent', 'extentAndMedium', 'identifier']\ndf_final = df_final[columns_to_keep]\n\n# Sauvegarder dans le fichier CSV final\noutput_file = 'urls.csv'\ndf_final.to_csv(output_file, index=False)\n\nprint(f\"Le fichier '{output_file}' a \u00e9t\u00e9 cr\u00e9\u00e9 avec succ\u00e8s.\")\n</code></pre>"},{"location":"resources/scripts/AtoM-record-updater/","title":"Injection des m\u00e9tadonn\u00e9es dans AtoM","text":"<p> Seibt, Yonathan J\u00e9r\u00f4me  D\u00e9cembre 2024  Archives de la construction moderne \u2013 EPFL</p> <p>Ce package est distribu\u00e9 sous la licence GNU General Public License v3. Vous pouvez le redistribuer et/ou le modifier selon les termes de la GNU GPL tels que publi\u00e9s par la Free Software Foundation, soit la version 3 de la licence, soit (\u00e0 votre choix) toute version ult\u00e9rieure. Ce programme est distribu\u00e9 dans l\u2019espoir qu\u2019il sera utile, mais SANS AUCUNE GARANTIE\u202f; sans m\u00eame la garantie implicite de QUALIT\u00c9 MARCHANDE ou D\u2019AD\u00c9QUATION \u00c0 UN USAGE PARTICULIER. Voir la GNU General Public License pour plus de d\u00e9tails. Pour obtenir une copie de la GNU General Public License, consultez www.gnu.org/licenses/.</p>"},{"location":"resources/scripts/AtoM-record-updater/#objectif","title":"Objectif","text":"<p>Ce script Python permet d\u2019injecter automatiquement des m\u00e9tadonn\u00e9es enrichies dans les notices AtoM, en interagissant avec l\u2019interface web d\u2019AtoM via des requ\u00eates HTTP.</p> <p>Il constitue la deuxi\u00e8me \u00e9tape du processus de synchronisation Archivematica/AtoM, en exploitant le fichier <code>urls.csv</code> g\u00e9n\u00e9r\u00e9 au pr\u00e9alable \u00e0 partir du fichier METS.</p>"},{"location":"resources/scripts/AtoM-record-updater/#fonctionnalites","title":"Fonctionnalit\u00e9s","text":"<ul> <li>Connexion automatique \u00e0 AtoM \u00e0 l\u2019aide d\u2019un fichier <code>login.csv</code></li> <li>Parcours de chaque notice identifi\u00e9e dans <code>urls.csv</code></li> <li> <p>Remplissage automatis\u00e9 des champs ISAD-G :</p> <ul> <li>Titre</li> <li>Date de cr\u00e9ation</li> <li>Niveau de description</li> <li>\u00c9tendue et support</li> <li>Localisation des originaux</li> <li>Identifiant (cote)</li> <li>Type d\u2019\u00e9v\u00e9nement (\u00ab creation \u00bb)</li> </ul> </li> <li> <p>Envoi des formulaires de mise \u00e0 jour</p> </li> </ul>"},{"location":"resources/scripts/AtoM-record-updater/#contenu","title":"Contenu","text":"<p>Scripts Python</p> <ul> <li><code>AtoM_METS_Data_Merger.py</code> : analyse et fusionne les m\u00e9tadonn\u00e9es provenant de METS (Archivematica) et CSV (AtoM).</li> <li><code>AtoM_Record_Updater.py</code> : met \u00e0 jour les notices dans AtoM avec les m\u00e9tadonn\u00e9es enrichies via l\u2019interface web.</li> </ul> <p>Fichiers de donn\u00e9es</p> <ul> <li><code>isad_0000000001.csv</code> : fichier d\u2019export AtoM contenant les notices existantes.</li> <li><code>METS_123456789.xml</code> : fichier METS produit par Archivematica contenant les m\u00e9tadonn\u00e9es structur\u00e9es.</li> <li><code>login.csv</code> : identifiants n\u00e9cessaires pour acc\u00e9der \u00e0 l\u2019interface web d\u2019AtoM.</li> <li><code>urls.csv</code> : liste des URLs ou des UUID n\u00e9cessaires pour localiser ou synchroniser les donn\u00e9es.</li> </ul>"},{"location":"resources/scripts/AtoM-record-updater/#prerequis","title":"Pr\u00e9requis","text":"<ul> <li> <p>Syst\u00e8mes et fichiers requis</p> </li> <li> <p>Fichier <code>urls.csv</code> g\u00e9n\u00e9r\u00e9 par le script AtoM_METS_Data_Merger.py</p> </li> <li>Fichier <code>login.csv</code> contenant les identifiants pour AtoM</li> <li> <p>Une instance d\u2019AtoM 2.8.2 accessible en ligne</p> </li> <li> <p>Environnement Python 3.8+ avec les biblioth\u00e8ques suivantes :</p> <ul> <li>requests : gestion des requ\u00eates HTTP.</li> <li>BeautifulSoup (bs4) : navigation et interaction avec les formulaires web.</li> <li>csv (int\u00e9gr\u00e9e)</li> </ul> </li> </ul>"},{"location":"resources/scripts/AtoM-record-updater/#format-attendu-de-logincsv","title":"Format attendu de <code>login.csv</code>","text":"<p>Le fichier <code>login.csv</code> doit se trouver au m\u00eame niveau que le script. Il contient deux colonnes : <code>username</code> et <code>password</code>. Exemple :</p> login.csv<pre><code>Email,Password\nuser@example.org,MyPassword123\n</code></pre>"},{"location":"resources/scripts/AtoM-record-updater/#etapes-dutilisation","title":"\u00c9tapes d'utilisation","text":""},{"location":"resources/scripts/AtoM-record-updater/#placez-vous-dans-le-bon-dossier","title":"Placez-vous dans le bon dossier","text":"<p>Ouvrez l'invite de commande et placez-vous dans le bon dossier.</p> <pre><code>cd \"C:\\Users\\votre.nom\\Chemin\\vers\\le\\dossier\"\n</code></pre> <p>Ce dossier doit contenir :</p> <ul> <li>Le script python <code>AtoM_Record_Updater.py</code></li> <li>Le fichier <code>login.csv</code></li> <li>Le fichier <code>urls.csv</code></li> </ul>"},{"location":"resources/scripts/AtoM-record-updater/#executez-le-script","title":"Ex\u00e9cutez le script","text":"<pre><code>cd \"C:\\Users\\votre.nom\\Chemin\\vers\\le\\dossier\"\npython AtoM_Record_Updater.py\n</code></pre> <p>Le script devrait se connecter automatiquement \u00e0 AtoM, pour ensuite parcourir les notices mentionn\u00e9es dans <code>urls.csv</code> et injecter les m\u00e9tadonn\u00e9es ligne par ligne.</p>"},{"location":"resources/scripts/AtoM-record-updater/#fonctionnement-technique","title":"Fonctionnement technique","text":"<p>Le script repose probablement sur une biblioth\u00e8que d\u2019automatisation (ex. Selenium ou requests + BeautifulSoup) pour :</p> <ul> <li>Acc\u00e9der \u00e0 l\u2019interface de connexion d\u2019AtoM</li> <li>Naviguer jusqu\u2019\u00e0 chaque notice (via les URLs FR et EN du CSV)</li> <li>Remplir les champs appropri\u00e9s</li> <li>Enregistrer les modifications</li> </ul>"},{"location":"resources/scripts/AtoM-record-updater/#a-savoir","title":"\u00c0 savoir","text":"<ul> <li>Le processus peut prendre un certain temps en fonction du nombre de notices \u00e0 modifier.</li> <li>Aucune sauvegarde automatique n\u2019est effectu\u00e9e : il est recommand\u00e9 de tester sur un environnement de d\u00e9veloppement ou une copie du d\u00e9p\u00f4t AtoM avant un d\u00e9ploiement en production.</li> <li>Si le format du fichier urls.csv est incorrect ou incomplet, le script peut \u00e9chouer silencieusement ou provoquer des erreurs.</li> </ul>"},{"location":"resources/scripts/AtoM-record-updater/#bonnes-pratiques","title":"Bonnes pratiques","text":"<ul> <li>Testez d\u2019abord avec 1 ou 2 notices pour valider que tout fonctionne.</li> <li>V\u00e9rifiez que les champs ISAD-G dans AtoM sont bien configur\u00e9s pour recevoir les m\u00e9tadonn\u00e9es attendues.</li> <li>Faites une sauvegarde de votre base de donn\u00e9es AtoM avant d\u2019ex\u00e9cuter le script \u00e0 grande \u00e9chelle.</li> </ul>"},{"location":"resources/scripts/AtoM-record-updater/#scripts-atom_record_updaterpy","title":"Scripts <code>AtoM_Record_Updater.py</code>","text":"<pre><code># Script: AtoM_Record_Updater.py\n# Description: This script automates the update of archival records in AtoM by interacting with its web interface. It uses HTTP requests to modify\n# records based on enriched metadata from a merged CSV file.\n#\n# Author: Yonathan Seibt, Archives de la construction moderne \u2013 EPFL\n# Date: November 2024\n#\n# License: This script is distributed under the GNU General Public License v3. You may redistribute and/or modify it under the terms \n#          of the GNU GPL as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n#\n#          This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty \n#          of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n#\n#          You should have received a copy of the GNU General Public License along with this program. If not, see &lt;https://www.gnu.org/licenses/&gt;.\n\nimport requests\nimport csv\nfrom bs4 import BeautifulSoup\n\n# Charger les informations d'identifiants depuis le fichier login.csv\ndef load_login_credentials(login_file):\n    credentials = []\n    with open(login_file, 'r', encoding='utf-8') as file:\n        reader = csv.DictReader(file)\n        for row in reader:\n            credentials.append({\n                'email': row['Email'],\n                'password': row['Password']\n            })\n    return credentials\n\n# Se connecter \u00e0 la page avec les identifiants\ndef login_to_site(session, login_url, email, password):\n    response = session.get(login_url)\n    soup = BeautifulSoup(response.content, 'html.parser')\n\n    csrf_token = soup.find('input', {'name': '_csrf_token'}).get('value')\n    if not csrf_token:\n        print(\"Erreur : CSRF token non trouv\u00e9.\")\n        return False\n\n    login_data = {\n        '_csrf_token': csrf_token,\n        'email': email,\n        'password': password,\n        'next': 'https://morphe-test.epfl.ch/index.php/user/login'\n    }\n\n    login_response = session.post(login_url, data=login_data, allow_redirects=True)\n\n    if \"Bienvenue\" in login_response.text or login_response.status_code == 200:\n        print(f\"Connexion r\u00e9ussie avec {email}!\")\n        return True\n    else:\n        print(f\"\u00c9chec de la connexion avec {email}.\")\n        return False\n\n# Traiter les URLs du fichier urls.csv\ndef process_urls(session, urls_file):\n    with open(urls_file, 'r', encoding='utf-8') as file:\n        reader = csv.DictReader(file)\n        for row in reader:\n            url = row['urls']\n            date_creation = row['dateCreation']\n            scope_and_content = row['scopeAndContent']\n            edit_events_type = row['editEvents_0_type']\n            level_of_description = row['levelOfDescription']\n            extent_and_medium = row['extentAndMedium']\n            titre = row['titre']\n            identifier = row['identifier']\n\n\n            print(f\"Acc\u00e8s \u00e0 l'URL: {url}\")\n\n            try:\n                response = session.get(url)\n                response.raise_for_status()\n            except requests.RequestException as e:\n                print(f\"Erreur lors de l'acc\u00e8s \u00e0 l'URL {url}: {e}\")\n                continue\n\n            if response.status_code == 200:\n                soup = BeautifulSoup(response.content, 'html.parser')\n\n                form_elements = soup.find_all(['input', 'textarea', 'select'])\n                print(f\"\\nChamps trouv\u00e9s sur {url} :\")\n\n                form_data = {}\n\n                for element in form_elements:\n                    name = element.get('name')\n                    id = element.get('id')\n\n                    print(f\"Champ trouv\u00e9: {name}, ID: {id}\")\n\n                    if id == 'editEvents_0_type':\n                        select_element = element\n                        options = select_element.find_all('option')\n                        for option in options:\n                            if option['value'] == f\"/index.php/{edit_events_type}\":\n                                option['selected'] = 'selected'\n                                form_data[name] = option['value']\n                                print(f\"Option mise \u00e0 jour : {option}\")\n\n                    elif id == 'editEvents_0_date':\n                        print(f\"Remplissage du champ 'editEvents_0_date' avec : {date_creation}\")\n                        element['value'] = date_creation\n                        form_data[name] = element['value']\n\n                    elif id == 'levelOfDescription':\n                        print(f\"Remplissage du champ 'levelOfDescription' avec : {level_of_description}\")\n                        option_element = element.find('option', value=f\"/index.php/{level_of_description}\")\n                        if option_element:\n                            option_element['selected'] = 'selected'\n                            form_data[name] = f\"/index.php/{level_of_description}\"\n                            print(f\"Option s\u00e9lectionn\u00e9e : {option_element}\")\n                        else:\n                            print(f\"Option avec la valeur '/index.php/{level_of_description}' non trouv\u00e9e pour le champ 'levelOfDescription'.\")\n\n                    elif id == 'extentAndMedium':\n                        print(f\"Remplissage du champ 'extentAndMedium' avec : {extent_and_medium}\")\n                        element.string = extent_and_medium\n                        form_data[name] = element.string\n\n                    elif id == 'scopeAndContent':\n                        print(f\"Remplissage du champ 'scopeAndContent' avec : {scope_and_content}\")\n                        element.string = scope_and_content\n                        form_data[name] = element.string\n\n                    elif id == 'title':\n                        print(f\"Remplissage du champ 'title' avec : {titre}\")\n                        element['value'] = titre\n                        form_data[name] = element['value']\n\n                    elif id == 'identifier':\n                        print(f\"Remplissage du champ 'identifier' avec : {identifier}\")\n                        element['value'] = identifier\n                        form_data[name] = element['value']\n\n                submit_url = url\n                csrf_token = soup.find('input', {'name': '_csrf_token'})\n                if csrf_token:\n                    form_data['_csrf_token'] = csrf_token.get('value')\n                else:\n                    print(f\"Erreur : CSRF token non trouv\u00e9 pour l'URL {url}\")\n                    continue\n\n                # Convert form data to the correct format for submission\n                data_to_submit = {key: value for key, value in form_data.items()}\n\n                print(f\"Donn\u00e9es envoy\u00e9es : {data_to_submit}\")\n\n                try:\n                    submit_response = session.post(submit_url, data=data_to_submit)\n                    submit_response.raise_for_status()\n                except requests.RequestException as e:\n                    print(f\"Erreur lors de la soumission du formulaire pour {url}: {e}\")\n                    continue\n\n                if submit_response.status_code == 200:\n                    print(f\"Formulaire soumis avec succ\u00e8s pour {url}\")\n                else:\n                    print(f\"Erreur lors de la soumission du formulaire pour {url}. Code : {submit_response.status_code}\")\n\n            print(\"\\n---\\n\")\n\n# Principal\ndef main():\n    login_file = 'login.csv'\n    urls_file = 'urls.csv'\n    login_url = \"https://morphe-test.epfl.ch/index.php/user/login\"\n\n    session = requests.Session()\n    credentials = load_login_credentials(login_file)\n\n    for cred in credentials:\n        email = cred['email']\n        password = cred['password']\n\n        if login_to_site(session, login_url, email, password):\n            process_urls(session, urls_file)\n            break\n        else:\n            print(\"Essai de connexion \u00e9chou\u00e9 pour cet utilisateur.\")\n\n# Ex\u00e9cuter le script\nif __name__ == \"__main__\":\n    main()\n</code></pre>"},{"location":"wiki/under-construction/","title":"\ud83d\udea7 Page en construction","text":"<p>Cette page est en cours de r\u00e9daction. Elle sera prochainement enrichie avec du contenu utile et \u00e0 jour.</p> <p>En attendant, n\u2019h\u00e9sitez pas \u00e0 explorer les autres sections du wiki via le menu de navigation.</p> <p>Si vous avez une suggestion ou une contribution \u00e0 apporter, vous pouvez nous contacter ou soumettre une proposition via le d\u00e9p\u00f4t GitHub.</p>"},{"location":"en/","title":"Welcome to the Archives de la construction moderne Wiki","text":"<p>This is a technical documentation space designed to centralize the knowledge, procedures, and tools used at the Archives de la construction moderne.</p> <p>To learn how this site was created or how to build a similar one, see the About the wiki section.</p>"},{"location":"en/#archives-de-la-construction-moderne","title":"Archives de la construction moderne","text":"<p>The Archives de la construction moderne (Acm) preserve and organize original documents (plans, models, photographs, etc.) related to the built environment.</p> <p>Containing technical, spatial, historical and social data, these collections are structured according to the principles of information science, relying on archival standards and interoperable metadata models to ensure their long-term preservation and accessibility. These resources are available to support research, teaching and interdisciplinary projects led by ENAC faculty members and EPFL.</p>"},{"location":"en/meta/advanced/","title":"Advanced configuration","text":""},{"location":"en/meta/advanced/#bilingual-support","title":"Bilingual support","text":"<p>The wiki of the Archives de la construction moderne (Acm) uses a bilingual French/English documentation system, implemented using the <code>mkdocs-static-i18n</code> plugin for MkDocs. This plugin allows you to manage multiple languages within a single repository while maintaining a dedicated navigation structure for each language. View the official documentation here.</p>"},{"location":"en/meta/advanced/#plugin-installation","title":"Plugin installation","text":"<p>In the Python environment used to build the site, the <code>mkdocs-static-i18n</code> plugin must be installed:</p> <pre><code>pip install mkdocs-static-i18n\n</code></pre> <p>Then activated in the <code>mkdocs.yml</code> file:</p> <pre><code>features:\n  - i18n\n\nplugins:\n  - i18n\n</code></pre> <p>Finally, if you have created a GitHub Actions workflow, for example using the <code>.github/workflows/ci.yml</code> file, make sure to add a command to install the required dependencies. See the publishing section for more information on creating this file.</p> <p>In the <code>steps:</code> section, before the call to <code>mkdocs gh-deploy</code>:</p> ci.yml<pre><code>steps:\n  - run: pip install mkdocs-material\n  - run: pip install mkdocs-static-i18n\n  - run: mkdocs gh-deploy --force\n</code></pre>"},{"location":"en/meta/advanced/#structure-and-navigation","title":"Structure and navigation","text":"<pre><code>docs/\n\u251c\u2500\u2500 index.fr.md\n\u251c\u2500\u2500 index.en.md\n\u2514\u2500\u2500 wiki/\n    \u251c\u2500\u2500 overview.fr.md\n    \u251c\u2500\u2500 overview.en.md\n    \u251c\u2500\u2500 installation.fr.md\n    \u2514\u2500\u2500 installation.en.md\n</code></pre> <p>In this configuration, files are named with language suffixes (<code>.fr.md</code>, <code>.en.md</code>, etc.) and placed directly in the <code>docs/</code> folder. The plugin detects the files based on their language suffix, and there's no need to include the suffix in <code>nav:</code>.</p> <p>The search bar may disappear, the search plugin must be explicitly declared.</p> <pre><code>plugins:\n  - search\n  - privacy\n  - i18n:\n      languages:\n        - locale: fr\n          name: Fran\u00e7ais\n          build: true\n          default: true\n          nav:\n            - Accueil: index.md\n            - \u00c0 propos:\n                - Pr\u00e9sentation technique: wiki/overview.md\n                - Installation initiale: wiki/installation.md\n\n        - locale: en\n          name: English\n          build: true\n          nav:\n            - Home: index.md\n            - About:\n                - Technical overview: wiki/overview.md\n                - Installation: wiki/installation.md\n</code></pre> <p>In this example, French is defined as the default language. The root URL of the site, <code>https://my-site/</code>, automatically displays the French version. This URL corresponds to the <code>docs/index.fr.md</code> file, which becomes the homepage. The URL <code>https://my-site/en/</code> displays the English version of the site. This URL corresponds to the docs/index.en.md file.</p> URL Source file used Language <code>https://my-site/</code> <code>docs/index.fr.md</code>  French (default) <code>https://my-site/en/</code> <code>docs/index.en.md</code>  English"},{"location":"en/meta/installation/","title":"Installation","text":"<p>This wiki was created using Material for MkDocs. It is hosted on GitHub Pages.</p> <p>This documentation describes how this wiki was deployed. Its goal is to document the technical steps taken during its creation while providing a reproducible guide for anyone wishing to build a similar site.</p> <p>This guide is based directly on the official Material for MkDocs documentation, and serves as a simplified, condensed version adapted to this project's context.</p>"},{"location":"en/meta/installation/#prerequisites","title":"Prerequisites","text":"<p>Before beginning the installation, make sure you have the following tools:</p> <ul> <li> <p> Python, a simple, readable, and widely used programming language. We recommend version 3.4 or newer for this guide.</p> <ul> <li> pip, Python\u2019s package manager. It is used to install libraries and tools, and is included by default with Python 3.4+.</li> </ul> </li> <li> <p> A code editor. We recommend  VSCodium, an open-source alternative to  Visual Studio Code.</p> </li> <li> <p> A GitHub account, since we\u2019ll deploy the site using the GitHub Pages service.</p> </li> </ul> <p>Tip</p> <p>Once installed, you can check if Python is working by opening a terminal and typing:</p> <pre><code>python --version\n</code></pre> <p>To check if <code>pip</code> is working:</p> <pre><code>pip --version\n</code></pre>"},{"location":"en/meta/installation/#initial-installation","title":"Initial installation","text":"<p>Open a terminal in the folder where you want to create your project:</p>  Windows macOS <p>Open  Powershell</p> <p>Open  Terminal</p> <p>The terminal runs commands inside a specific folder. It\u2019s important to navigate to the folder where you want to create your wiki. The <code>cd</code> (\"change directory\") command lets you move through your file structure from the terminal.</p> <pre><code>cd path/to/my/folder\n</code></pre> <p>Run commands from the editor</p> <p>Visual Studio Code and VSCodium include an integrated terminal, allowing you to continue running commands directly from the editor. Go to the Terminal menu &gt; New Terminal, or use the shortcut.</p>"},{"location":"en/meta/installation/#create-a-python-virtual-environment","title":"Create a Python virtual environment","text":"<p>What does this command mean?</p> <p><code>-m venv</code> uses Python\u2019s built-in venv module to create virtual environments. <code>venv</code> is the name of the folder that will be created in your project (you can change it, but <code>venv</code> is a common convention).</p> <p>In the terminal, type the following command:</p> <pre><code>python -m venv venv\n</code></pre>"},{"location":"en/meta/installation/#activate-the-virtual-environment","title":"Activate the virtual environment","text":"Windows macOS <pre><code>.\\venv\\Scripts\\activate\n</code></pre> <pre><code>source venv/bin/activate\n</code></pre> <p>Activation</p> <p>If successful, you\u2019ll see the environment name <code>(venv)</code> appear at the start of your command line.</p> <p>Each time you close the terminal, you\u2019ll need to reactivate the environment with the same command as above.</p>"},{"location":"en/meta/installation/#install-material-for-mkdocs-with-pip","title":"Install Material for MkDocs with <code>pip</code>","text":"<pre><code>pip install mkdocs-material\n</code></pre> <p>This command installs MkDocs, Material for MkDocs, and all required dependencies.</p> <p>After installation, you can verify that MkDocs is available by typing <code>mkdocs --version</code>.</p>"},{"location":"en/meta/installation/#open-the-project-folder-in-visual-studio-code-or-vscodium","title":"Open the project folder in Visual Studio Code or VSCodium","text":"<p>What does this command mean?</p> <p><code>code</code> launches Visual Studio Code / VSCodium. <code>.</code> means \u201cthe current folder\u201d.</p> <p>You can use the following command in your terminal (from the correct folder):</p> <pre><code>code .\n</code></pre> <p>If you opened the folder directly in Visual Studio Code or VSCodium, this step is not necessary.</p>"},{"location":"en/meta/installation/#initialize-a-new-mkdocs-site","title":"Initialize a new MkDocs site","text":"<p>In the terminal (with the virtual environment still active), type:</p> <pre><code>mkdocs new .\n</code></pre> <p>The following structure should be created:</p> <pre><code>.\n\u251c\u2500 docs/\n\u2502  \u2514\u2500 index.md\n\u2514\u2500 mkdocs.yml\n</code></pre> <p>This command creates two important elements:</p> <ul> <li><code>docs/index.md</code>: the site\u2019s homepage. Written in Markdown, you can edit it freely.</li> <li><code>mkdocs.yml</code>: the configuration file, written in YAML (for title, theme, navigation, languages, etc.).</li> </ul> <p>To add a new page to your site, simply create a <code>.md</code> file in the <code>docs/</code> folder. For example, if you create a file called <code>about.md</code>, it will be available at https://my-site/about/.</p> <p>Need a Markdown syntax refresher?</p> <p>Check out our Markdown syntax guide for the basics.</p>"},{"location":"en/meta/installation/#configure-the-site-in-mkdocsyml","title":"Configure the site in <code>mkdocs.yml</code>","text":"<p>Open <code>mkdocs.yml</code> in your editor and replace its content with the following configuration:</p> mkdocs.yml<pre><code>site_name: My project\nsite_url: https://my-site.example\ntheme:\n  name: material\n</code></pre>"},{"location":"en/meta/installation/#preview-the-site-locally","title":"Preview the site locally","text":"<p>Now that your site is configured, you can build and preview it live while you work.</p> <p>In the terminal (with the virtual environment activated), type:</p> <pre><code>mkdocs serve\n</code></pre> <p>Open a browser and go to: http://localhost:8000/</p> <p>Live preview your changes</p> <p>As long as <code>mkdocs serve</code> is running, the site remains visible and updates automatically when you save changes.</p> <p>When you're done, stop the server by pressing the following in the terminal:</p>  Windows macOS <p>Press Ctrl+C</p> <p>Press Cmd+C</p>"},{"location":"en/meta/installation/#yaml-schema-validation","title":"YAML schema validation","text":"<p>The <code>mkdocs.yml</code> file is central to your site's configuration. To avoid syntax or structure errors (which may prevent the site from building), we strongly recommend enabling automatic YAML schema validation in your code editor.</p> <p>In Visual Studio Code or VSCodium, search for YAML in the Extensions panel and install the official YAML extension by Red Hat.</p> <p>Look for the <code>settings.json</code> file in the settings panel or create one at the root of your project.</p> <p>Add the following code to the file:</p> settings.json<pre><code>{\n  \"yaml.schemas\": {\n    \"https://squidfunk.github.io/mkdocs-material/schema.json\": \"mkdocs.yml\"\n  },\n  \"yaml.customTags\": [ \n    \"!ENV scalar\",\n    \"!ENV sequence\",\n    \"!relative scalar\",\n    \"tag:yaml.org,2002:python/name:material.extensions.emoji.to_svg\",\n    \"tag:yaml.org,2002:python/name:material.extensions.emoji.twemoji\",\n    \"tag:yaml.org,2002:python/name:pymdownx.superfences.fence_code_format\",\n    \"tag:yaml.org,2002:python/object/apply:pymdownx.slugs.slugify mapping\"\n  ]\n}\n</code></pre>"},{"location":"en/meta/installation/#deployment","title":"Deployment","text":"<p>Once your site is created and customized locally, you can publish it for free using GitHub Pages. See the Publishing section to learn how to deploy your site for the first time, and how to update it easily afterward.</p>"},{"location":"en/meta/overview/","title":"About this Wiki","text":"<p>This wiki was designed as a technical and collaborative documentation space to centralize knowledge, procedures, and tools related to our working environment.</p> <p>It is based on MkDocs and the Material for MkDocs theme\u2014two open source tools specifically designed for writing structured and readable documentation entirely in Markdown. It is hosted on GitHub Pages.</p>"},{"location":"en/meta/overview/#objectives","title":"Objectives","text":"<ul> <li>Document our workflows and best practices  </li> <li>Facilitate onboarding for new team members  </li> <li>Ensure knowledge is preserved within the team  </li> </ul> <p>This wiki is constantly evolving. Feel free to suggest additions or corrections.</p>"},{"location":"en/meta/overview/#what-is-mkdocs","title":"What is MkDocs?","text":"<p>MkDocs is a static site generator designed for writing technical or professional documentation. It uses the Markdown language, making content easy to write, read, and share. The generated sites are fast, lightweight, and easy to host\u2014even on free services like GitHub Pages.</p>"},{"location":"en/meta/overview/#what-is-material-for-mkdocs","title":"What is Material for MkDocs?","text":"<p>Material for MkDocs started out as a simple theme for MkDocs, but has significantly evolved over the years. It now includes many built-in plugins, advanced configuration options, and a wide range of customization features.</p>"},{"location":"en/meta/overview/#learn-more","title":"Learn more","text":"<ul> <li>Official Markdown documentation: daringfireball.net </li> <li>Official MkDocs documentation: mkdocs.org </li> <li>Official Material for MkDocs documentation:  squidfunk.github.io/mkdocs-material </li> <li>Quick start guide by James Willett:  Getting Started with Material for MkDocs</li> </ul>"},{"location":"en/meta/publish/","title":"Publishing the Site","text":"<p>After creating and customizing your site locally, you can publish it for free with GitHub Pages. This section explains how to make the first deployment, then how to update the site easily afterward.</p>"},{"location":"en/meta/publish/#prerequisites","title":"Prerequisites","text":"<p>Make sure you have:</p> <ul> <li> A GitHub account</li> <li> A public or private repository (e.g., <code>username/my-wiki</code>)</li> <li> A working MkDocs project with a <code>mkdocs.yml</code> file</li> <li> Activated the Python virtual environment (venv), if not already done.</li> </ul>"},{"location":"en/meta/publish/#github-actions-configuration-file","title":"GitHub Actions Configuration File","text":"<p>In a <code>.github/workflows/</code> folder, create a file named <code>ci.yml</code>:</p> <pre><code>name: ci \non:\n  push:\n    branches:\n      - master \n      - main\npermissions:\n  contents: write\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v4\n      - name: Configure Git Credentials\n        run: |\n          git config user.name github-actions[bot]\n          git config user.email 41898282+github-actions[bot]@users.noreply.github.com\n      - uses: actions/setup-python@v5\n        with:\n          python-version: 3.x\n      - run: echo \"cache_id=$(date --utc '+%V')\" &gt;&gt; $GITHUB_ENV \n      - uses: actions/cache@v4\n        with:\n          key: mkdocs-material-${{ env.cache_id }}\n          path: ~/.cache \n          restore-keys: |\n            mkdocs-material-\n      - run: pip install mkdocs-material \n      - run: mkdocs gh-deploy --force\n</code></pre> <p>If you are using the <code>mkdocs-static-i18n</code> plugin:</p> <p>In the <code>steps:</code> section, before the call to <code>mkdocs gh-deploy</code>:</p> ci.yml<pre><code>steps:\n  - run: pip install mkdocs-material\n  - run: pip install mkdocs-static-i18n\n  - run: mkdocs gh-deploy --force\n</code></pre>"},{"location":"en/meta/publish/#deploying-the-site-on-github-pages","title":"Deploying the Site on GitHub Pages","text":"<p>If necessary, stop the local server by pressing in the terminal:</p>  Windows macOS <p>Press Ctrl+C</p> <p>Press Cmd+C</p> <p>Initialize a Git repository in the project folder using the terminal:</p> <pre><code>git init\n</code></pre> <p><code>.gitignore</code> file</p> <p>Optionally, you can add a <code>.gitignore</code> file at the root of your project. The <code>.gitignore</code> file is used by Git to specify which files or folders should not be pushed to GitHub. To learn more, see the dedicated page. You can also download this site's <code>.gitignore</code> file directly from the GitHub repository.</p> <p>Add all new or modified files in the current folder and its subfolders with:</p> <pre><code>git add .\n</code></pre> <p>Optionally, you can verify what has been added with:</p> <pre><code>git status\n</code></pre> <p>Now commit your changes with the following command (<code>-m \"...\"</code> specifies the commit message):</p> <pre><code>git commit -m \"Initial commit\"\n</code></pre> <p>Next, enter the following command with the address of your GitHub repository. You can copy it directly from your repository page.</p> <pre><code>git remote add origin git@github.com:username/my-wiki.git\n</code></pre> <p>Push your files to the repository:</p> <pre><code>git push origin main\n</code></pre> <p>From your repository page:</p> <ul> <li>Click Settings &gt; Pages</li> <li> <p>Under Build and deployment:</p> <ul> <li>Source: <code>Deploy from a branch</code></li> <li>Branch: <code>gh-pages</code></li> </ul> </li> <li> <p>Click <code>Save</code>.</p> </li> </ul> <p>A new workflow will appear in the <code>Actions</code> tab for deploying your site. Once deployed, a URL like <code>https://username.github.io/my-wiki</code> will appear. This process may take a few minutes.</p> <p>Congratulations, your site is now live!</p>"},{"location":"en/meta/publish/#updating-the-site","title":"Updating the Site","text":"<p>Once your changes are complete, redeploy your site using the following commands:</p> If you added a <code>.gitignore</code> file <p>If you've added or updated your .gitignore file, you may need to remove existing files from Git's index. The .gitignore file prevents Git from tracking new matching files, but it doesn't remove those already tracked. <pre><code>git rm -r --cached .\n</code></pre></p> <p>Then stage and commit your changes:</p> <pre><code>git add .\n</code></pre> <pre><code>git commit -m \"Mise \u00e0 jour\"\n</code></pre> <pre><code>git push origin main\n</code></pre> <p>Your updated site will automatically be published to both the <code>main</code> and <code>gh-pages</code> branches of your repository. No additional steps are needed. As long as your repository is configured to deploy from the <code>gh-pages branch</code>, your site will be updated automatically.</p>"},{"location":"en/meta/publish/#troubleshooting","title":"Troubleshooting","text":"<p>Here are some common issues you might encounter when updating or deploying your site with Git and MkDocs, along with solutions to fix them.</p>"},{"location":"en/meta/publish/#error-failed-to-push-some-refs","title":"Error : <code>failed to push some refs</code>","text":"<p>While updating, you might see the following error:</p> <pre><code>git push origin main\nTo https://github.com/utilisateur/mon-repo.git\n! [rejected]        main -&gt; main (fetch first)\nerror: failed to push some refs to 'https://github.com/utilisateur/mon-repo.git'\nhint: Updates were rejected because the remote contains work that you do not have locally.\nhint: This is usually caused by another repository pushing to the same ref.\nhint: If you want to integrate the remote changes, use\nhint: 'git pull' before pushing again.\nhint: See the 'Note about fast-forwards' in 'git push --help' for details.\n</code></pre> <p>Cause: You're trying to push changes (<code>git push</code>) while the remote <code>main</code> branch already contains commits that are not in your local version \u2014 for example, if you edited a file directly on GitHub (like <code>README.md</code>).</p> <p>Solution: Run a <code>git pull</code> to retrieve the latest changes from the remote branch before pushing again:</p> <pre><code>git pull origin main --rebase\ngit push origin main\n</code></pre> <p>What does <code>--rebase</code> do?</p> <p>The <code>--rebase</code> option integrates the remote changes into your local history in a clean way, avoiding unnecessary merge commits.</p>"},{"location":"en/meta/structure/","title":"Structuring content","text":""},{"location":"en/meta/structure/#markdown","title":"Markdown","text":"<p>This site is built with Material for MkDocs, which uses the Markdown language to write page content. Markdown is a lightweight markup language that allows you to format text in a simple, readable, and fast way, without needing to know HTML. This section is based directly on  The Markdown Guide.</p> <p>Here are the main Markdown syntax rules to know:</p>"},{"location":"en/meta/structure/#headings","title":"Headings","text":"<p>Markdown allows you to structure content using heading levels ranging from <code>#</code> (level 1) to <code>######</code> (level 6). Material for MkDocs automatically generates the table of contents from level 2 (<code>##</code>) and level 3 (<code>###</code>) headings.</p> <p><pre><code># Level 1 heading\n## Level 2 heading\n### Level 3 heading\n</code></pre> Use only one level 1 heading (<code>#</code>) per page. It is generally used as the main title and is automatically used by MkDocs as the page title.</p> <p>Use a logical heading hierarchy (<code>##</code>, <code>###</code>, etc.) so that the table of contents is clear and meaningful.</p> <p>Compatibility</p> <p>Markdown applications don\u2019t all handle missing spaces between the number signs (#) and the heading text in the same way. For best compatibility:</p> <ul> <li> <p>Add a space between the <code>#</code> characters and the heading text.</p> <p><code>## My title</code> </p> <p><code>##My title</code> </p> </li> <li> <p>Add a blank line before and after each heading. This ensures a stable rendering across all Markdown engines.</p> </li> </ul> <pre><code>Add a blank line before...\n\n## Heading\n\n...and after each heading or block.\n</code></pre>"},{"location":"en/meta/structure/#paragraphs","title":"Paragraphs","text":"<p>In Markdown, a paragraph is simply one or more lines of text separated by a blank line. By default, if you press Enter without adding a blank line, the text will be merged into a single paragraph.</p> <p>For example:</p> <pre><code>Line 1  \nLine 2\n</code></pre> <p>This will be displayed as a single continuous line, like: Line 1 Line 2</p> <p>However, it\u2019s still useful to keep this formatting to make your file easier to read.</p> <p>To insert a manual line break without creating a new paragraph, add two spaces at the end of the line:</p> <pre><code>Line 1\u2423\u2423\nLine 2\n</code></pre>"},{"location":"en/meta/structure/#emphasis","title":"Emphasis","text":"<p>Markdown lets you highlight text using bold, italic, and both at once.</p> <pre><code>*italic*\n**bold**\n***bold and italic***\n</code></pre> <p>You can also emphasize part of a word without spaces, like this: <code>incred**ible**</code> \u2192 incredible</p>"},{"location":"en/meta/structure/#lists","title":"Lists","text":"<p>Markdown allows you to create unordered (bulleted) or ordered (numbered) lists using simple syntax. To nest a sublist, indent the item with at least 2 spaces or a tab.</p> <p>Unordered list (bullets)</p> <p>To create a bulleted list, you can use the symbols <code>-</code>, <code>*</code> or <code>+</code> in front of each item. All three work, but it\u2019s best to be consistent within a file.</p> <pre><code>- Item 1\n- Item 2\n    - Nested item\n</code></pre> <p>Ordered list (numbered)</p> <p>Use numbers followed by a dot (<code>1.</code>, <code>2.</code>, etc.) to create a numbered list. The numbers don\u2019t have to be in order (Markdown will automatically reorder them), but the first item must start with <code>1.</code>. For best compatibility across Markdown engines, always use the dot <code>.</code> (and not a parenthesis) after the numbers.</p> <p><pre><code>1. First\n2. Second\n    1. Nested item\n3. Third\n</code></pre> If you need to start an unordered list item with a number followed by a dot (e.g., \"3.5 liters\"), use a backslash (<code>\\</code>) to prevent Markdown from treating it as a list item.</p> <p>If you want stricter control over list behavior (especially nesting), you can enable the <code>sane_lists</code> extension in your <code>mkdocs.yml</code>:</p> mkdocs.yml<pre><code>markdown_extensions:\n  - sane_lists\n</code></pre> <p>Markdown will no longer automatically renumber the list items.</p>"},{"location":"en/meta/structure/#links-and-images","title":"Links and Images","text":"<p>Links</p> <p>In Markdown, you can easily insert clickable links using a simple syntax. You can optionally add a title that will appear when hovering over the link. To do this, add it in quotes just after the URL.</p> <pre><code>[Link text](https://example.com \"This is an example\")\n</code></pre> <p>There should be no space between <code>[</code> and <code>(</code> in links. Hovering over the link will display: This is an example.</p> <p>Reference-style links</p> <p>Markdown also allows you to define links in a more readable way by separating the link text from the URL. This is useful in long documents to avoid cluttering paragraphs with raw URLs.</p> <pre><code>[Documentation][material-mkdocs]\n\n[material-mkdocs]: https://squidfunk.github.io/mkdocs-material/\n</code></pre> <p>You can place the reference (<code>[material-mkdocs]: ...</code>) anywhere in the file, typically at the bottom of the page.</p> <p>If you want to quickly turn a raw URL or email address into a clickable link, just enclose it in angle brackets &lt; &gt;:</p> <p>address@example.com</p> <p>Images</p> <p>Images work similarly:</p> <pre><code>![Alt text](path/to/image.png)\n</code></pre>"},{"location":"en/meta/structure/#quotes-and-code","title":"Quotes and Code","text":"<p>In Markdown, you can insert a quote or block of indented text using the <code>&gt;</code> symbol at the beginning of the line. You can also nest multiple levels of quotes.</p> <pre><code>&gt; This is a quote.\n&gt;&gt; Nested quote.\n</code></pre> <p>This is a quote.</p> <p>Nested quote.</p> <p>Material for MkDocs provides an alternative to standard Markdown quotes: informative blocks or callouts. These help structure information visually using icons, colors, and customizable types (tip, warning, note, etc.).</p> <p>Example</p> <p>This is a quote.</p> <p>This type of block is covered in a dedicated section.</p> <p>To format a word or phrase as inline code, wrap it in backticks <code>`</code> (also known as grave accents).</p> <pre><code>`inline code`\n</code></pre> <p>If the word or phrase already contains a backtick, you can escape it by using double backticks instead of a single one.</p> <p>What about code blocks?</p> <p>To display multiple lines of code in a dedicated block, use multiline code blocks. These are fully supported by Material for MkDocs with advanced features like line numbering, copy buttons, syntax highlighting, etc. This is covered in the dedicated section.</p>"},{"location":"en/meta/structure/#material-for-mkdocs","title":"Material for MkDocs","text":"<p>In addition to standard Markdown, Material for MkDocs supports many enhanced Markdown extensions via <code>pymdown-extensions</code>, a powerful suite of tools designed to improve the readability, structure, and interactivity of your documentation.</p> <p>These features are either built-in or can be easily activated via the <code>mkdocs.yml</code> configuration file under <code>markdown_extensions:</code>.</p> <p>This section introduces the most useful extensions for making your documentation clearer, more readable, and more professional.</p>"},{"location":"en/meta/structure/#code-blocks","title":"Code blocks","text":"<p>Material for MkDocs supports interactive, styled code blocks with many options:</p> <ul> <li>Automatic syntax highlighting based on the language</li> <li>Line numbering</li> <li>\u201cCopy\u201d button in the top right corner of the block</li> </ul> <p>To enable these options, add or edit the following sections in your <code>mkdocs.yml</code>:</p> mkdocs.yml<pre><code>features:\n    - content.code.copy\n\nmarkdown_extensions:\n  - pymdownx.highlight:\n      anchor_linenums: true\n      line_spans: __span\n      pygments_lang_class: true\n  - pymdownx.inlinehilite\n  - pymdownx.snippets\n  - pymdownx.superfences\n</code></pre> <p>The basic syntax is the same as standard Markdown: use three backticks (<code>```</code>) to open and close the block, and optionally add the language name to enable syntax highlighting.</p> <pre><code>```py\nnum = int(input(\"Enter a number: \"))\nif (num % 2) == 0:\n   print(\"{0} is Even\".format(num))\nelse:\n   print(\"{0} is Odd\".format(num))\n```\n</code></pre> <pre><code>num = int(input(\"Enter a number: \"))\nif (num % 2) == 0:\n   print(\"{0} is Even\".format(num))\nelse:\n   print(\"{0} is Odd\".format(num))\n</code></pre> <p>Display a banner above the block with a title using <code>title=\"...\"</code>.</p> <pre><code>```py title=\"odd_or_even.py\"\nnum = int(input(\"Enter a number: \"))\nif (num % 2) == 0:\n   print(\"{0} is Even\".format(num))\nelse:\n   print(\"{0} is Odd\".format(num))\n```\n</code></pre> odd_or_even.py<pre><code>num = int(input(\"Enter a number: \"))\nif (num % 2) == 0:\n   print(\"{0} is Even\".format(num))\nelse:\n   print(\"{0} is Odd\".format(num))\n</code></pre> <p>You can also add <code>linenums=\"...\"</code> to enable line numbering and <code>hl_lines=\"...\"</code> to highlight one or more lines:</p> <pre><code>```py title=\"odd_or_even.py\" linenums=\"1\" hl_lines=\"2-3\"\nnum = int(input(\"Enter a number: \"))\nif (num % 2) == 0:\n   print(\"{0} is Even\".format(num))\nelse:\n   print(\"{0} is Odd\".format(num))\n```\n</code></pre> odd_or_even.py<pre><code>num = int(input(\"Enter a number: \"))\nif (num % 2) == 0:\n   print(\"{0} is Even\".format(num))\nelse:\n   print(\"{0} is Odd\".format(num))\n</code></pre> <p>You can specify multiple lines or ranges:</p> <pre><code>```py hl_lines=\"2 4 6-8\"\n</code></pre>"},{"location":"en/meta/structure/#admonitions","title":"Admonitions","text":"<p>Admonitions can be used to highlight a note, warning, example, or important information.</p> <p>To enable them, add or edit the following in your <code>mkdocs.yml</code>:</p> mkdocs.yml<pre><code>markdown_extensions:\n  - admonition\n  - pymdownx.details\n  - pymdownx.superfences\n</code></pre> <p>Admonitions start with <code>!!!</code> followed by a keyword indicating the type. You can also make them collapsible with <code>???</code> (collapsed) or <code>???+</code> (expanded). By default, the title is based on the type, but you can customize it using quotes.</p> <pre><code>!!! info\n    This wiki uses Material for MkDocs.\n\n??? warning \"Caution\"\n    Be careful with filename casing.\n</code></pre> <p>Info</p> <p>This wiki uses Material for MkDocs.</p> Caution <p>Be careful with filename casing.</p> <p>It\u2019s also possible to add a callout inline using <code>inline</code> or <code>inline end</code>.</p> <p>Example</p> <p>This type of callout takes up less vertical space.</p> <pre><code>!!! example inline end \"Example\"\n    This type of callout takes up less vertical space.\n</code></pre> <p>Available types include: <code>note</code>, <code>tip</code>, <code>quote</code>, <code>warning</code>, <code>danger</code>, <code>bug</code>, etc. See all available types and styles.</p>"},{"location":"en/meta/structure/#content-tabs","title":"Content Tabs","text":"<p>You can organize alternate versions of the same content using tabs:</p> <pre><code>=== \"Windows\"\n    Instructions for Windows...\n\n=== \"macOS\"\n    Instructions for macOS...\n</code></pre> WindowsmacOS <p>Instructions for Windows...</p> <p>Instructions for macOS...</p>"},{"location":"en/meta/theme/","title":"Visual customization","text":"<p>This section presents different ways to customize the appearance and behavior of your MkDocs site, relying on the many features offered by Material for MkDocs.</p>"},{"location":"en/meta/theme/#changing-the-sites-appearance","title":"Changing the site's appearance","text":"<p>Material for MkDocs allows you to define custom color schemes and offer users a toggle button to switch between light and dark mode.</p>"},{"location":"en/meta/theme/#selecting-the-theme","title":"Selecting the theme","text":"<p>Material for MkDocs comes with two themes: a light mode <code>default</code> and a dark mode <code>slate</code>.</p> <p>In your <code>mkdocs.yml</code> file, add or modify the <code>theme:</code> section as follows:</p> <pre><code>theme:\n  name: material\n  palette:\n    scheme: slate\n</code></pre>"},{"location":"en/meta/theme/#defining-colors","title":"Defining colors","text":"<p>The main colors of the theme are defined using <code>primary</code> and <code>accent</code>.</p> <p><code>primary</code> defines the dominant color of the theme. It's used in the top navigation bar, active links, and some interactive elements or buttons.</p> <pre><code>theme:\n  name: material\n  palette:\n    primary: deep purple\n</code></pre> <p><code>accent</code> defines the secondary color. It's used to draw attention to elements like hovered links, selected icons, and visual effects (highlighting, selection indicators, etc.).</p> <pre><code>theme:\n  name: material\n  palette:\n    accent: pink\n</code></pre> <p>You can choose from a list of predefined colors provided by the theme such as <code>blue</code>, <code>cyan</code>, <code>green</code>, <code>teal</code>, <code>deep orange</code>, etc. See the full list here.</p> <p>You can also use custom colors by defining your own palette (with hex codes or CSS variables). See the official documentation.</p>"},{"location":"en/meta/theme/#enabling-lightdark-mode","title":"Enabling light/dark mode","text":"<p>Offering a light and dark color palette makes your documentation pleasant to read at different times of the day, so the user can choose accordingly.</p> <p>The following configuration will render a toggle button next to the search bar to switch between themes.</p> <p>Customize light/dark modes</p> <p>You can also define different <code>primary</code> and <code>accent</code> colors for each palette (light or dark).</p> <pre><code>theme:\n  name: material\n\n  palette:\n    - scheme: slate\n      toggle:\n        icon: material/weather-sunny\n        name: Switch to light mode\n\n    - scheme: default\n      toggle:\n        icon: material/weather-night\n        name: Switch to dark mode\n</code></pre> <p>The button uses Material Design icons, which can be customized using the <code>toggle:icon</code> property.</p> <p>By default, it uses:</p> <ul> <li><code>material/weather-night</code>  to switch to dark mode;</li> <li><code>material/weather-sunny</code>  to return to light mode.</li> </ul> <p>You can replace these icons with any from the Material Design Icons library. See the full icon list here.</p>"},{"location":"en/meta/theme/#changing-the-font","title":"Changing the font","text":"<p>Material for MkDocs makes it easy to change fonts via direct integration with Google Fonts. You can customize the text font (regular body) and the monospace font (used in code blocks), or even load your own fonts if needed.</p> <pre><code>theme:\n  name: material\n  font:\n    text: Roboto\n    code: Roboto Mono\n</code></pre>"},{"location":"en/meta/theme/#using-icons-and-emojis","title":"Using icons and emojis","text":"<p>Material for MkDocs allows easy integration of icons and emojis directly in your Markdown content, via the <code>pymdownx.emoji</code> extension. Add the following configuration to the <code>markdown_extensions</code> section of your <code>mkdocs.yml</code> file:</p> <pre><code>markdown_extensions:\n  - attr_list\n  - pymdownx.emoji:\n      emoji_index: !!python/name:material.extensions.emoji.twemoji\n      emoji_generator: !!python/name:material.extensions.emoji.to_svg\n</code></pre> <p>This allows you to use emojis in your content that are rendered as styled SVG icons, compatible with the theme and responsive to light/dark modes. See the full list of icons and emojis here.</p> <p>\"My editor shows a syntax error!\"</p> <p>This is expected. The syntax <code>!!python/name:...</code> is not standard YAML and is only understood by PyYAML (used by MkDocs). You can safely ignore the warning.</p>"},{"location":"en/meta/theme/#data-protection","title":"Data protection","text":"<p>Using Google Fonts implies that the user's browser sends a request to a Google server to load the fonts. This can raise privacy concerns.</p> <p>In Europe, the General Data Protection Regulation (GDPR) considers the user's IP address as personal data. Loading Google Fonts from a third-party server (such as Google\u2019s) transmits this IP address without explicit consent, which may violate the law \u2014 notably after court decisions in Germany and Austria.</p> <p>In Switzerland, the new Federal Act on Data Protection (nFADP) effective from 2023 is inspired by the GDPR and also treats IP addresses as personal data.</p> <p>You can disable external loading entirely by adding this to <code>mkdocs.yml</code>:</p> <pre><code>theme:\n  name: material\n  font: false\n</code></pre> <p>This forces the site to use local system fonts. You can also download the fonts from Google Fonts, place them in the <code>docs/</code> folder (or subfolder like <code>docs/assets/</code>), and include them via CSS (see previous section).</p> <p>Built-in plugin</p> <p>Material for MkDocs provides a built-in plugin to enhance privacy. It automatically disables external calls (Google Fonts, scripts, etc.): <pre><code>  plugins:\n    - privacy\n</code></pre></p> <p>Another option is to add a cookie consent form (banner or popup) to comply with data protection laws:</p> <pre><code>extra:\n  consent:\n    title: Accept cookies\n    description: &gt;-\n      This site uses cookies or external services\n      that may collect personal data.\n</code></pre>"},{"location":"en/meta/theme/#customizing-the-logo-and-icons","title":"Customizing the logo and icons","text":"<p>Material for MkDocs lets you customize your site's visual identity by adding a logo, a favicon (browser tab icon), and even custom icons in the navigation or social links.</p> <p>To add a logo and favicon, place your image files (preferably .png or .svg) in the <code>docs/</code> folder or a subfolder (e.g., <code>docs/assets/</code>), then reference them in <code>mkdocs.yml</code>:</p> <pre><code>theme:\n  name: material\n  logo: assets/images/logo.svg\n  favicon: assets/images/favicon.png\n</code></pre>"},{"location":"en/meta/theme/#navigation-customization","title":"Navigation customization","text":"<p>Material for MkDocs offers advanced navigation features through the <code>features:</code> option in the <code>mkdocs.yml</code> file. Here are three particularly useful options to improve your site\u2019s structure and usability.</p>"},{"location":"en/meta/theme/#navigation-structure","title":"Navigation structure","text":"<p>The <code>nav:</code> key in mkdocs.yml lets you define the order, structure, and titles of pages in the sidebar (or tabs, if <code>navigation.tabs</code> is enabled).</p> <p>Without this section, MkDocs generates the navigation based on files found in the <code>docs/</code> folder, which often leads to a messy structure \u2014 especially for complex or multilingual projects.</p> <p>This lets you control page order, omit pages, rename navigation labels without changing file names, and create submenus.</p> <pre><code>nav:\n  - Home: index.md\n  - About:\n      - Overview: about/overview.md\n      - Installation: about/installation.md\n</code></pre>"},{"location":"en/meta/theme/#navigation-tabs","title":"Navigation tabs","text":"<p>The <code>navigation.tabs</code> option displays the main navigation as horizontal tabs at the top of the page. Each top-level item in <code>nav:</code> becomes a horizontal tab.</p> <pre><code>theme:\n  name: material\n\n  features:\n    - navigation.tabs\n</code></pre>"},{"location":"en/meta/theme/#sections","title":"Sections","text":"<p>The <code>navigation.sections</code> option complements <code>navigation.tabs</code>. It displays section headers in the left sidebar menu, visually grouping the content.</p> <pre><code>theme:\n  name: material\n\n  features:\n    - navigation.tabs\n    - navigation.sections\n</code></pre>"},{"location":"en/meta/theme/#footer","title":"Footer","text":"<p>The <code>navigation.footer</code> option enables:</p> <ul> <li>A navigation footer with Previous page and Next page buttons</li> <li>A custom footer with links, icons, and text (credits, legal notices, etc.)</li> </ul> <pre><code>theme:\n  name: material\n\n  features:\n    - navigation.footer\n\nextra:\n  social:\n    - icon: material/github\n      link: https://github.com/my-project\n    - icon: material/web\n      link: https://example.com\n\ncopyright: Copyright &amp;copy; 2025 My Organization\n</code></pre>"},{"location":"en/meta/theme/#example-configuration","title":"Example configuration","text":"mkdocs.yml<pre><code>theme:\n  name: material\n\n  font:\n    text: Source Sans 3\n    code: Source Code Pro\n\n  logo: assets/images/logo.svg\n  favicon: assets/images/favicon.png\n\n  features:\n    - navigation.footer\n    - navigation.tabs\n    - navigation.sections\n\n  palette:\n    # Dark mode\n    - scheme: slate\n      toggle:\n        icon: material/weather-sunny\n        name: Switch to light mode\n      primary: indigo\n      accent: red\n\n    # Light mode\n    - scheme: default\n      toggle:\n        icon: material/weather-night\n        name: Switch to dark mode\n      primary: blue\n      accent: red\n\nnav:\n  - Home: index.md\n  - About:\n      - Overview: about/overview.md\n      - Installation: about/installation.md\n\nplugins:\n  - privacy\n\nextra:\n  social:\n    - icon: material/github\n      link: https://github.com/my-project\n    - icon: material/web\n      link: https://example.com\n\ncopyright: Copyright &amp;copy; 2025 My Organization\n\nmarkdown_extensions:\n  - attr_list\n  - pymdownx.emoji:\n      emoji_index: !!python/name:material.extensions.emoji.twemoji\n      emoji_generator: !!python/name:material.extensions.emoji.to_svg\n</code></pre>"},{"location":"en/resources/git/gitignore/","title":"Excluding Files in a MkDocs Repository","text":"<p> Muong, Kethsana  August 2025  Archives de la construction moderne \u2013 EPFL</p> <p>This file is distributed under the GNU General Public License v3. You may redistribute and/or modify it under the terms of the GNU GPL as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This <code>.gitignore</code> file is provided as an example for projects using MkDocs with the Material for MkDocs theme. It includes common directories, temporary files, and build artifacts that should be excluded from Git tracking during site development and deployment. To obtain a copy of the GNU General Public License, visit www.gnu.org/licenses/.</p>"},{"location":"en/resources/git/gitignore/#purpose","title":"Purpose","text":"<p>The <code>.gitignore</code> file tells Git which files or folders should not be tracked or included in the repository history. It is essential to prevent accidentally committing:</p> <ul> <li>large or automatically generated files (e.g., <code>/site/</code>)</li> <li>temporary or cache files (e.g., <code>__pycache__/</code>, <code>.DS_Store</code>)</li> <li>files containing sensitive information (e.g., <code>.env</code>)</li> </ul> <p>Reminder</p> <p>The <code>.gitignore</code> file prevents Git from tracking new matching files, but has no effect on files that are already tracked. If you add a rule after files are already committed, remove them from the index using: <pre><code>git rm -r --cached .\ngit add .\ngit commit -m \"Clean ignored files from repository\"\n</code></pre></p>"},{"location":"en/resources/git/gitignore/#sample-gitignore-file","title":"Sample <code>.gitignore</code> File","text":"<pre><code># =========================\n# MkDocs and deployment\n# =========================\n\n# MkDocs-generated Folder\nsite/\n\n# Plugins Cache\n.cache/\n\n# =========================\n# Python environment\n# =========================\n\n# Environnements virtuels\n.env\n.venv\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\n\n# Python Cache\n__pycache__/\n*.py[cod]\n*.pyo\n*.pyd\n*.pyc\n\n# Pip logs\npip-log.txt\npip-delete-this-directory.txt\n\n# =========================\n# Packaging &amp; distribution\n# =========================\n\n.Python\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\npip-wheel-metadata/\nshare/python-wheels/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\n\n# =========================\n# IDEs / Code editors\n# =========================\n\n# Visual Studio Code / VSCodium\n.vscode/\n.history/\n\n# Save or temporary IDE files\n*~\n*.swp\n*.bak\n*.tmp\n\n# =========================\n# System files\n# =========================\n\n# macOS\n.DS_Store\n\n# Fichiers log g\u00e9n\u00e9riques\n*.log\n</code></pre>"},{"location":"en/resources/scripts/AtoM-METS-merger/","title":"Metadata Integration Package for Archivematica and AtoM","text":"<p> Seibt, Yonathan J\u00e9r\u00f4me  December 2024  Archives de la construction moderne \u2013 EPFL</p> <p>This package is distributed under the GNU General Public License v3. You may redistribute and/or modify it under the terms of the GNU GPL as published by the Free Software Foundation, either version 3 of the license, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. To obtain a copy of the GNU General Public License, visit www.gnu.org/licenses/.</p>"},{"location":"en/resources/scripts/AtoM-METS-merger/#purpose","title":"Purpose","text":"<p>This package automates the integration of metadata generated by Archivematica (1.17.0) into AtoM (2.8.2), ensuring smooth synchronization and consistent updates between both systems. It provides a structured workflow for:</p> <ol> <li>Data extraction and transformation: Merging metadata from METS (XML) files generated by Archivematica with records exported from AtoM (CSV).</li> <li>Automated record updates in AtoM: Injecting enriched metadata via HTTP interactions.</li> </ol>"},{"location":"en/resources/scripts/AtoM-METS-merger/#contents","title":"Contents","text":"<p>Python scripts</p> <ul> <li><code>AtoM_METS_Data_Merger.py</code>: Parses and merges metadata from METS (Archivematica) and CSV (AtoM).</li> <li><code>AtoM_Record_Updater.py</code>: Updates AtoM records with enriched metadata via the web interface.</li> </ul> <p>Data files</p> <ul> <li><code>isad_0000000001.csv</code>: Exported AtoM file containing existing records.</li> <li><code>METS_123456789.xml</code>: METS file produced by Archivematica containing structured metadata.</li> <li><code>login.csv</code>: Credentials for accessing AtoM\u2019s web interface.</li> <li><code>urls.csv</code>: List of URLs or UUIDs needed to locate and synchronize data.</li> </ul>"},{"location":"en/resources/scripts/AtoM-METS-merger/#technical-requirements","title":"Technical requirements","text":"<ul> <li> <p>Systems required</p> </li> <li> <p>Archivematica: Version 1.17.0, for generating METS files.</p> </li> <li> <p>AtoM: Version 2.8.2</p> </li> <li> <p>Python environment, version 3.8+ with the following libraries:</p> </li> <li> <p><code>pandas</code>: For CSV file handling.</p> </li> <li><code>xml.etree.ElementTree</code>: For parsing XML files.</li> <li><code>requests</code>: For sending HTTP requests.</li> <li><code>BeautifulSoup (bs4)</code>: For navigating web forms.</li> </ul>"},{"location":"en/resources/scripts/AtoM-METS-merger/#why-is-this-script-necessary","title":"Why is this script necessary?","text":"<p>When a DIP generated by Archivematica is pushed to AtoM, the folder structure is flattened: all files appear at the same level, losing their original hierarchy. This limitation is documented in the Archivematica/AtoM communities.</p> <p>This script helps re-establish a logical link between:</p> <ul> <li>Existing AtoM records (exported via Clipboard in CSV format)</li> <li>Files in the DIP (and their metadata, extracted from the METS file)</li> </ul> <p>The resulting file, <code>urls.csv</code>, can then be used by a second script to automatically inject enriched metadata into AtoM.</p>"},{"location":"en/resources/scripts/AtoM-METS-merger/#how-to-use","title":"How to use","text":""},{"location":"en/resources/scripts/AtoM-METS-merger/#check-the-name-of-the-mets-file","title":"Check the name of the METS file","text":"<p>Open the script and make sure the <code>mets_filename</code> variable matches the name of your METS file. For example:</p> AtoM_METS_Data_Merger.py<pre><code>mets_filename = \"METS_123456789.xml\"\n</code></pre> <p>Edit this value if needed.</p>"},{"location":"en/resources/scripts/AtoM-METS-merger/#open-a-command-prompt-and-navigate-to-the-correct-folder","title":"Open a command prompt and navigate to the correct folder","text":"<pre><code>cd \"C:\\Users\\your.name\\Path\\To\\The\\Folder\"\n</code></pre> <p>This folder must contain:</p> <ul> <li>The METS file</li> <li>The AtoM CSV export</li> <li>The Python script</li> </ul>"},{"location":"en/resources/scripts/AtoM-METS-merger/#run-the-script","title":"Run the script","text":"<pre><code>python AtoM_METS_Data_Merger.py\n</code></pre> <p>If everything goes well, the following message should appear:</p> <pre><code>Le fichier 'urls.csv' a \u00e9t\u00e9 cr\u00e9\u00e9 avec succ\u00e8s.\n</code></pre>"},{"location":"en/resources/scripts/AtoM-METS-merger/#expected-output","title":"Expected output","text":"<p>The generated <code>urls.csv</code> contains the following columns:</p> Column Description <code>urls</code> Two URLs per AtoM record (FR and EN) used to apply updates. <code>titre</code> Title constructed from the original filename. <code>editEvents_0_type</code> Type of event to register, e.g., <code>\"creation\"</code>. <code>dateCreation</code> File creation date extracted from the METS file. <code>levelOfDescription</code> ISAD-G level of description, e.g., <code>\"item\"</code>. <code>locationOfOriginals</code> Original file path inside the DIP. <code>extentAndMedium</code> File type and size (e.g., PDF, 512 KB). <code>identifier</code> ISAD-G reference code generated for the item."},{"location":"en/resources/scripts/AtoM-METS-merger/#next-steps","title":"Next steps","text":"<p>You can now use the generated <code>urls.csv</code> with the <code>AtoM_Record_Updater.py</code> script to inject metadata directly into AtoM\u2019s web interface.</p>"},{"location":"en/resources/scripts/AtoM-METS-merger/#script-atom_mets_data_mergerpy","title":"Script <code>AtoM_METS_Data_Merger.py</code>","text":"<p>(The script contents follow here and remain unchanged from the original French version.)</p> <pre><code># Script: AtoM_METS_Data_Merger.py\n# Description: This script extracts and merges metadata from AtoM (CSV) and METS (XML) files. It standardizes, parses, and combines data\n# into a unified, enriched CSV file ready for further processing or import into AtoM.\n#\n# Author: Yonathan Seibt, Archives de la construction moderne \u2013 EPFL\n# Date: November 2024\n#\n# License: This script is distributed under the GNU General Public License v3. You may redistribute and/or modify it under the terms \n#          of the GNU GPL as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n#\n#          This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty \n#          of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n#\n#          You should have received a copy of the GNU General Public License along with this program. If not, see &lt;https://www.gnu.org/licenses/&gt;.\n\nimport pandas as pd\nimport re\nimport xml.etree.ElementTree as ET\nfrom datetime import datetime\n\n# ---- Partie 1 : Extraire les UUID du fichier CSV ----\n\n# Lire le fichier CSV\ndf_csv = pd.read_csv('isad_0000000001.csv')  # Remplacez par le nom de votre fichier CSV\n\n# Ajouter une colonne d'index pour conserver l'ordre\ndf_csv['index'] = df_csv.index\n\n# Fonction pour extraire l'UUID\ndef extract_uuid(url):\n    if isinstance(url, str):\n        match = re.search(r'/([0-9a-fA-F-]{36})-', url)\n        if match:\n            return match.group(1)\n    return None\n\n# Appliquer la fonction \u00e0 la colonne contenant les URLs\ndf_csv['UUID'] = df_csv['digitalObjectURI'].apply(extract_uuid)  # Remplacez par le nom de votre colonne\n\n# ---- Partie 2 : Extraire les donn\u00e9es du fichier XML ----\n\n# Charger le fichier XML\nxml_file = 'METS.07fdd110-6ae2-49c4-989d-6394c152be9c.xml'\ntree = ET.parse(xml_file)\nroot = tree.getroot()\n\n# D\u00e9finir l'espace de noms utilis\u00e9 dans le fichier XML\nns = {'mets': 'http://www.loc.gov/METS/'}\n\n# Fonction pour extraire toutes les donn\u00e9es des balises &lt;mets:amdSec&gt; et les structurer\ndef extract_all_amdSec_data(root, ns):\n    amdSec_data = []\n\n    # Trouver toutes les balises &lt;mets:amdSec&gt;\n    for amdSec in root.findall('.//mets:amdSec', ns):\n        data = {}\n\n        # Extraire l'attribut 'ID' de la balise &lt;mets:amdSec&gt;\n        data['ID'] = amdSec.attrib.get('ID', None)\n\n        # Extraire toutes les sous-balises pertinentes\n        for element in amdSec.iter():\n            # Si l'\u00e9l\u00e9ment est une balise avec un texte (et non l'attribut)\n            if element.tag != '{http://www.loc.gov/METS/}amdSec' and element.text:\n                # Enlever l'espace de noms de la balise\n                tag = element.tag.split('}')[1] if '}' in element.tag else element.tag\n                data[tag] = element.text.strip()\n\n        # Ajouter les donn\u00e9es extraites \u00e0 la liste\n        amdSec_data.append(data)\n\n    return amdSec_data\n\n# Extraire toutes les donn\u00e9es des balises &lt;mets:amdSec&gt;\namdSec_data = extract_all_amdSec_data(root, ns)\n\n# Cr\u00e9er un DataFrame avec les donn\u00e9es extraites\ndf_xml = pd.DataFrame(amdSec_data)\n\n# Filtrer les colonnes non pertinentes\ncolumns_to_keep = [\n    'ID', 'objectIdentifierValue', 'size', 'messageDigestAlgorithm', 'messageDigest', 'formatName', 'formatVersion', \n    'formatRegistryKey', 'dateCreatedByApplication', 'created', \n    'creatingApplicationName', 'FileName', 'FileType', 'FileTypeExtension', 'MIMEType', 'originalName'\n]\n\n# Garder uniquement les colonnes pertinentes\ndf_filtered = df_xml[columns_to_keep]\n\n# ---- Partie 3 : Fusionner les donn\u00e9es des deux DataFrames ----\n\n# Fusionner les deux DataFrames sur les colonnes correspondantes\n# Ici, on suppose que les noms des colonnes \u00e0 fusionner sont respectivement 'objectIdentifierValue' et 'UUID'\ndf_merged = pd.merge(df_filtered, df_csv, left_on='objectIdentifierValue', right_on='UUID', how='inner')\n\n# R\u00e9ordonner le DataFrame fusionn\u00e9 selon l'index original\ndf_merged = df_merged.sort_values(by='index')\n\n# ---- Partie 4 : Transformation et duplication des donn\u00e9es ----\n\n# Initialiser les nouvelles colonnes\ndf_merged['urls'] = 'https://morphe-test.epfl.ch/index.php/' + df_merged['slug'] + '/edit'\ndf_merged['titre'] = df_merged['title'] + ' (fichier num\u00e9rique)'\ndf_merged['editEvents_0_type'] = 'creation'\n\n# Corriger le format de date\ndef format_date(date_str):\n    try:\n        return datetime.strptime(date_str, '%Y-%m-%dT%H:%M:%SZ').strftime('%Y-%m-%d')\n    except ValueError:\n        return ''\n\ndf_merged['dateCreation'] = df_merged['dateCreatedByApplication'].apply(format_date)\ndf_merged['levelOfDescription'] = 'item'\ndf_merged['scopeAndContent'] = 'Chemin d\u2019acc\u00e8s du fichier sur le support original : ' + df_merged['originalName'].str.replace('%transferDirectory%objects/', '')\ndf_merged['extentAndMedium'] = '1 fichier num\u00e9rique ' + df_merged['formatName'] + ' de ' + df_merged['size'] + ' octets'\ndf_merged['identifier'] = ['0219.01.0130/04.01.01.' + str(i+1).zfill(2) for i in range(len(df_merged))]\n\n# Dupliquer chaque enregistrement avec modification de la colonne urls\ndf_duplicated = df_merged.copy()\ndf_duplicated['urls'] = 'https://morphe-test.epfl.ch/index.php/' + df_duplicated['slug'] + '/edit?sf_culture=fr&amp;template=isad'\n\n# Combiner les DataFrames\ndf_final = pd.concat([df_merged, df_duplicated], ignore_index=True)\n\n# R\u00e9ordonner le DataFrame final selon l'index original\ndf_final = df_final.sort_values(by='index')\n\n# S\u00e9lectionner les colonnes n\u00e9cessaires\ncolumns_to_keep = ['urls', 'titre', 'editEvents_0_type', 'dateCreation', 'levelOfDescription', 'scopeAndContent', 'extentAndMedium', 'identifier']\ndf_final = df_final[columns_to_keep]\n\n# Sauvegarder dans le fichier CSV final\noutput_file = 'urls.csv'\ndf_final.to_csv(output_file, index=False)\n\nprint(f\"Le fichier '{output_file}' a \u00e9t\u00e9 cr\u00e9\u00e9 avec succ\u00e8s.\")\n</code></pre>"},{"location":"en/resources/scripts/AtoM-record-updater/","title":"Injecting Metadata into AtoM","text":"<p> Seibt, Yonathan J\u00e9r\u00f4me  December 2024  Archives de la construction moderne \u2013 EPFL</p> <p>This package is distributed under the GNU General Public License v3. You may redistribute and/or modify it under the terms of the GNU GPL as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. To obtain a copy of the GNU General Public License, visit www.gnu.org/licenses/.</p> <p>This guide explains how to use the script <code>AtoM_Record_Updater.py</code> to automate the editing of archival descriptions in AtoM by injecting metadata extracted from a DIP\u2019s <code>METS</code> file.</p> <p>This script is the second step of the process, after generating the <code>urls.csv</code> file using the previous script.</p>"},{"location":"en/resources/scripts/AtoM-record-updater/#purpose","title":"Purpose","text":"<p>Once the <code>urls.csv</code> file has been generated, this script will:</p> <ul> <li>Log in to AtoM using a user account</li> <li>Open each archival description listed in <code>urls.csv</code></li> <li>Automatically populate ISAD-G fields with metadata extracted from the METS file:</li> <li>Title</li> <li>Date of creation</li> <li>Level of description</li> <li>Extent and medium</li> <li>Location of originals</li> <li>Identifier / Reference code</li> <li>Creation event</li> </ul>"},{"location":"en/resources/scripts/AtoM-record-updater/#requirements","title":"Requirements","text":"<ul> <li>The <code>urls.csv</code> file generated by the first script</li> <li>A <code>login.csv</code> file containing AtoM login credentials</li> <li>The script <code>AtoM_Record_Updater.py</code></li> <li>Python installed on your system</li> <li>An active internet connection</li> </ul> <p>Internet connection required</p> <p>This script interacts with the AtoM web interface. It simulates user navigation, which requires a stable connection and access to the live AtoM site.</p>"},{"location":"en/resources/scripts/AtoM-record-updater/#expected-format-for-logincsv","title":"Expected format for <code>login.csv</code>","text":"<p>The <code>login.csv</code> file must be located in the same directory as the script. It must contain two columns: <code>username</code> and <code>password</code>. Example:</p> login.csv<pre><code>username,password\nmy_user,my_password\n</code></pre>"},{"location":"en/wiki/under-construction/","title":"\ud83d\udea7 Page under construction","text":"<p>This page is currently being written. It will soon be updated with relevant and helpful content.</p> <p>In the meantime, feel free to explore other sections of the wiki using the navigation menu.</p> <p>If you have a suggestion or would like to contribute, feel free to contact us or submit a pull request via the GitHub repository.</p>"}]}